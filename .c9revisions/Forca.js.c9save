{"ts":1349205478004,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var Partida = require('./Partida'),\n\tParticipante = require('./Participante');\n\nvar Forca = {\n\tpalavras:[],\n\tpartidas:[],\n\tparticipantes:[],\n\thistorico:[],\n\tobterParticipante: function(participanteID) {\n\t\tfor (var i = 0; i < Forca.participantes.length; i++) {\n\t\t\tif (Forca.participantes[i].id == participanteID) {\n\t\t\t\tvar encontrado = Forca.participantes[i];\n\t\t\t\treturn encontrado;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\tsugerirLetra: function(participanteID, partidaID, letra) {\n\t\tvar partida = Forca.obterPartida(partidaID);\n\t\tpartida.sugerirLetra(letra, participanteID);\n\t\tif (partida.deveFinalizar()) {\n\t\t\tForca.finalizarPartida(partida);\n\t\t}\n\t\treturn partida;\n\t},\n\tcriarSegredo: function(palavra) {\n\t\tvar arr = palavra.split('');\n\t\tfor (var i = 0; i < palavra.length; i++) {\n\t\t\tarr[i] = '*';\n\t\t}\n\t\treturn arr.join('');\n\t},\n\texistePartida: function(palavra) {\n\t\treturn Forca.palavras[palavra] === true ? true : false;\n\t},\n\tobterPartida: function(id) {\n\t\tfor (var i = 0; i < Forca.partidas.length; i++) {\n\t\t\tif (Forca.partidas[i].id == id) {\n\t\t\t\treturn Forca.partidas[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\tcriarPartida: function(particitanteID, novaPalavra) {\n\t\tconsole.log('@@@@@@ criarPartida', particitanteID, 'palavra', novaPalavra, 'DataLog', new Date().toDateString());\n\t\tif (Forca.existePartida(novaPalavra)) {\n\t\t\tthrow 'It already a game running with this word.';\n\t\t}\n\t\tForca.palavras[novaPalavra] = true;\n\t\tvar partida = Partida.criar(novaPalavra, Forca.criarSegredo(novaPalavra), Forca.obterParticipante(particitanteID));\n\t\tForca.partidas.push(partida);\n\t\treturn partida;\n\t},\n\tentrarEmPartida: function(participanteID, nome, id) {\n\t\tvar partida = (id) ? Forca.obterPartida(id) : null;\n\t\tvar participante = Forca.obterParticipante(participanteID);\n\t\tif (partida) {\n\t\t\tpartida.adicionarParticipante(participante);\n\t\t\treturn participante;\n\t\t} else {\n\t\t\tthrow 'This game is running no more';\n\t\t}\n\t},\n\tadicionarParticipante: function(participanteID, nome) {\n\t\tvar participante = Participante.criar(participanteID, nome)\n\t\tForca.participantes.push(participante);\n\t\treturn participante;\n\t},\n\tfinalizarPartida: function(partida) {\n\t\tForca.removerPartida(partida.id);\n\t\tForca.historico.push(partida.finalizar());\n\t\tif (Forca.historico.length > 20) {\n\t\t\tForca.historico.shift();\n\t\t}\n\t},\n\tremoverPartida: function(partidaID) {\n\t\tfor (var i = 0; Forca.partidas.length; i++) {\n\t\t\tif (Forca.partidas[i].id === partidaID) {\n\t\t\t\tvar partida = Forca.partidas[i];\n\t\t\t\tForca.partidas.splice(i, 1);\n\t\t\t\ttry {\n\t\t\t\t\tForca.palavras.splice(partida.palavra, 1);\n\t\t\t\t} catch (e) { console.log('ERRO AO REMOVER PALAVRA', e) }\n\t\t\t\treturn partida;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\nmodule.exports = {\n\tgetHistorico: function() {\n\t\treturn Forca.historico;\n\t},\n\tgetPartidas: function() {\n\t\tvar part = [];\n\t\tfor (var i = 0; i < Forca.partidas.length; i++) {\n\t\t\tpart.push({ \n\t\t\t\tsegredo: Forca.partidas[i].segredo,\n\t\t\t\tparticipantes: Forca.partidas[i].participantes.length,\n\t\t\t\tid: Forca.partidas[i].id,\n\t\t\t\terros: Forca.partidas[i].erros\n\t\t\t});\n\t\t}\n\t\treturn part;\n\t},\n\tgetParticipantes: function() {\n\t\treturn Forca.participantes;\n\t},\n\tobterParticipante: Forca.obterParticipante,\n\tcriarPartida: Forca.criarPartida,\n\tsugerirLetra: Forca.sugerirLetra,\n\tdesistirDePartida: Forca.desistirDePartida,\n\tentrarEmPartida: Forca.entrarEmPartida,\n\tadicionarParticipante: Forca.adicionarParticipante\n}\n\t\n"]],"start1":0,"start2":0,"length1":0,"length2":3354}]],"length":3354}
{"contributors":[],"silentsave":false,"ts":1357933304719,"patch":[[{"diffs":[[0,"te;\n\t},\n"],[1,"    limparConexaoDoParticipante: function(participanteID) {\n        \n    },\n    renovarConexaoDoParticipante: function(participanteID, nome) {\n        \n    },\n"],[0,"\tfinaliz"]],"start1":2074,"start2":2074,"length1":16,"length2":175},{"diffs":[[0,"icipante"],[1,",\n    limparConexaoDoParticipante: Forca.limparConexaoDoParticipante,\n    renovarConexaoDoParticipante: Forca.renovarConexaoDoParticipante"],[0,"\n}\n\t\n"]],"start1":3500,"start2":3500,"length1":13,"length2":151}]],"length":3651,"saved":false}
{"ts":1357933381192,"patch":[[{"diffs":[[0,"ipanteID) {\n"],[1,"        var participante = Forca.obterParticipante(participanteID);\n        participante.socket.disconnect();\n        participante.socket = null;\n"],[0,"        \n   "]],"start1":2130,"start2":2130,"length1":24,"length2":170},{"diffs":[[0,"icipanteID, "],[-1,"nome"],[1,"socket"],[0,") {\n        "]],"start1":2351,"start2":2351,"length1":28,"length2":30},{"diffs":[[0,"cket) {\n        "],[1,"var participante = Forca.obterParticipante(participanteID);\n        participante.socket = socket;"],[0,"\n    },\n\tfinaliz"]],"start1":2365,"start2":2365,"length1":32,"length2":129}]],"length":3896,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358355919856,"patch":[[{"diffs":[[0,"ante"],[-1,",\n    limparConexaoDoParticipante: Forca.limparConexaoDoParticipante,\n    renovarConexaoDoParticipante: Forca.renovarConexaoDoParticipante"],[0,"\n}\n\t"]],"start1":3749,"start2":3749,"length1":146,"length2":8}]],"length":3758,"saved":false}
{"ts":1358356125122,"patch":[[{"diffs":[[0,"null;\n\t}"],[1,",\n    desistirDePartida: function()"],[0,"\n};\n\nmod"]],"start1":3039,"start2":3039,"length1":16,"length2":51}]],"length":3793,"saved":false}
{"ts":1358356378777,"patch":[[{"diffs":[[0,"unction("],[-1,")"],[1,"participanteID) {\n        var participante = Forca.obterParticipante(participanteID);\n    \t\n    }"],[0,"\n};\n\nmod"]],"start1":3073,"start2":3073,"length1":17,"length2":113}]],"length":3889,"saved":false}
{"ts":1358356612813,"patch":[[{"diffs":[[0,"cipanteID);\n"],[1,"        if (participante.partida) {\n            return participante.partida.removerParticipante(participante);\n        }\n"],[0,"    \t\n    }\n"]],"start1":3155,"start2":3155,"length1":24,"length2":145}]],"length":4010,"saved":false}
{"ts":1358356619935,"patch":[[{"diffs":[[0," }\n    \t"],[1,"return participante;"],[0,"\n    }\n}"]],"start1":3285,"start2":3285,"length1":16,"length2":36}]],"length":4030,"saved":false}
