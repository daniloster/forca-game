{"ts":1358443264509,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\r\njQuery UI Virtual Keyboard Widget\r\nVersion 1.4.1\r\n\r\nAuthor: Jeremy Satterfield\r\n-----------------------------------------\r\nCreative Commons Attribution-Share Alike 3.0 Unported License\r\nhttp://creativecommons.org/licenses/by-sa/3.0/\r\n-----------------------------------------\r\n\r\nAn on-screen virtual keyboard embedded within the browser window which\r\nwill popup when a specified entry field is focused. The user can then\r\ntype and preview their input before Accepting or Canceling.\r\n\r\nAs a plugin to jQuery UI styling and theme will automatically  \r\nmatch that used by jQuery UI with the exception of the required\r\nCSS listed below.\r\n\r\nRequires: \r\n    jQuery\r\n    jQuery UI\r\n\r\nUsage:\r\n    $('input[type=text], input[type=password], textarea')\r\n        .keyboard({\r\n            layout:\"alpha\"\r\n        });\r\n\r\nOptions:\r\n    layout\r\n        [String] specify which keyboard layout to use\r\n        qwerty - Standard QWERTY layout (Default)\r\n        alpha  - Alphabetical layout\r\n        dvorak - Dvorak Simplified layout\r\n        num    - Numerical (ten-key) layout\r\n        custom - Uses a custom layout as defined by the customLayout option\r\n    \r\n    customLayout\r\n        [Array] Specify a customer layout\r\n            An Array of arrays\r\n            Each internal array is a new keyboard row\r\n            Each internal array can contain either one or two \r\n                String elements (Lower case and Upper \r\n                case respectively)\r\n            Each string element must have each character\r\n                or key seperated by a space\r\n            Special/\"Action\" keys include:\r\n                {space}     - Spacebar\r\n                {bksp}      - Backspace\r\n                {shift}     - Shift/Capslock\r\n                {return}    - Return/New Line\r\n                {accept}    - Updates element value and closes keyboard\r\n                {cancel}    - Clears changes and closes keyboard\r\n                {dec}       - Decimal for numeric entry, only allows one decimal\r\n                {neg}       - Negative for numeric entry\r\n                {sp:#}      - Replace # with a numerical value, \r\n                                adds blank space, value of 1 ~ width of one key\r\n\r\nCSS:\r\n    .ui-keyboard{padding: .3em; position: absolute; z-index: 16000;}\r\n    .ui-keyboard-button{height: 2em; width: 2em; margin: .1em;}\r\n    .ui-keyboard-actionkey{width: 4em;}\r\n    .ui-keyboard-space{width: 15em;}\r\n    .ui-keyboard-preview{width: 100%; text-align: left;}  \r\n\r\nTODO:\r\n\r\nChangelog:\r\n    11/18/2010  1.4.1   Attach keyboard to the body tag for instances where \r\n                            a parent element is position relative\r\n                        Add focus method to refocus the input preview so that \r\n                            a cursor is visible\r\n                1.4     Update positioning to jQuery UI 1.8 position method\r\n                        Other tweaks for cleaning code\r\n    1/17/2010   1.3     Hide keyboard when clicking outside of keyboard\r\n              Tweek positioning to fit better on screen if page \r\n                  scrolled or resized\r\n  1/15/2010   1.2     Align keyboard with element it is called from\r\n              Append keyboard DOM to elements parent instead of body\r\n    10/30/2009  1.1     Change Preview window to clone the selected element\r\n                            to match the proper formatting of the element\r\n                            (i.e. not showing characters in password fields)\r\n                        Add Return key to insert new lines into textareas\r\n                        Change style of Accept and Cancel buttons \r\n                            to \"ui-state-highlight\" to standout\r\n                        Add ability for designer to create a custom keyboard \r\n                            layout\r\n    10/21/2009  1.0     initial build\r\n*/\r\njQuery.widget('ui.keyboard', {\r\n    layouts: {\r\n        \"qwerty\": [\r\n          ['1 2 3 4 5 6 7 8 9 0 - = `', '! @ # $ % ^ & * ( ) _ + ~'],\r\n          ['q w e r t y u i o p [ ] \\\\', 'Q W E R T Y U I O P { } |'],\r\n          ['{sp:.5} a s d f g h j k l ; \\' {return}', '{sp:.5} A S D F G H J K L : \" {return}'],\r\n          ['{sp:1} z x c v b n m , . / {shift}', '{sp:1} Z X C V B N M < > ? {shift}'],\r\n          ['{accept} {space} {cancel} {bksp}', '{accept} {space} {cancel} {bksp}']\r\n        ],\r\n        \"alpha\": [\r\n          ['1 2 3 4 5 6 7 8 9 0 - = `', '! @ # $ % ^ & * ( ) _ + ~'],\r\n          ['a b c d e f g h i j [ ] \\\\', 'A B C D E F G H I J { } |'],\r\n          ['{sp:.5} k l m n o p q r s ; \\' {return}', '{sp:.5} K L M N O P Q R S : \" {return}'],\r\n          ['{sp:1} t u v w x y z , . / {shift}', '{sp:1} T U V W X Y Z < > ? {shift}'],\r\n          ['{accept} {space} {cancel} {bksp}', '{accept} {space} {cancel} {bksp}']\r\n        ],\r\n        \"dvorak\": [\r\n          ['1 2 3 4 5 6 7 8 9 0 [ ] `', '! @ # $ % ^ & * ( ) { } ~'],\r\n          ['\\' , . p y f g c r l / = \\\\', '\" < > P Y F G C R L ? + |'],\r\n          ['{sp:.5} a o e u i d h t n s - {return}', '{sp:.5} A O E U I D H T N S _ {return}'],\r\n          ['{sp:1} ; q j k x b m w v z {shift}', '{sp:1} : Q J K X B M W V Z {shift}'],\r\n          ['{accept} {space} {cancel} {bksp}', '{accept} {space} {cancel} {bksp}']\r\n        ],\r\n        \"num\": [\r\n          ['1 2 3 {bksp}'],\r\n          ['4 5 6 {accept}'],\r\n          ['7 8 9 {cancel}'],\r\n          ['0 {dec} {neg}']\r\n        ],\r\n        \"gwg\": [\r\n          ['a b c d e f g h i j', 'A B C D E F G H I J'],\r\n          ['k l m n o p q r s', 'K L M N O P Q R S'],\r\n          ['t u v w x y z', 'T U V W X Y Z']\r\n        ]\r\n    },\r\n\r\n    _init: function() {\r\n        this.options.layout = this.options.layout || \"qwerty\";\r\n        this.layouts.custom = this.options.customLayout || [\r\n          ['{cancel}']\r\n        ];\r\n        var ui = this;\r\n        var element = ui.element;\r\n        var keyboard = this._buildKeyboard(ui);\r\n        var allKeys = keyboard.find('.ui-keyboard-button');\r\n        var inputKeys = allKeys.filter(':not(.ui-keyboard-actionkey)');\r\n        var previewInput = keyboard.find('.ui-keyboard-preview');\r\n        var decBtn = keyboard.find('[name=key_decimal]');\r\n        var clickListener = this.options.clickListener;\r\n        if (!clickListener) {\r\n            clickListener = function(inputKey) {};\r\n        }\r\n    \r\n        jQuery(document).unbind('mousedown', this._hideonexternalclick).bind('mousedown', this._hideonexternalclick);\r\n    \r\n        keyboard.position({\r\n          of: element,\r\n          my: \"left top\",\r\n          at: \"left top\",\r\n          collision: \"fit\",\r\n        });\r\n          \r\n        element.focus(function() {\r\n            var element = jQuery(this)\r\n            jQuery('.ui-keyboard').hide();\r\n            previewInput.val(element.val());\r\n    \r\n            keyboard.show();\r\n            previewInput.scrollTop(previewInput.attr('scrollHeight')).focus();\r\n        });\r\n    \r\n        jQuery('body').append(keyboard);\r\n    \r\n        inputKeys.click(function() {\r\n            clickListener(this.value);\r\n            previewInput.val(previewInput.val() + this.value)\r\n        });\r\n    \r\n        allKeys.click(function() {\r\n            previewInput.scrollTop(previewInput.attr('scrollHeight')).focus();\r\n        })\r\n    \r\n        if (decBtn.length > 0) {\r\n            allKeys.click(function() {\r\n            if (/\\./.test(previewInput.val())) {\r\n                decBtn.attr('disabled', 'disabled').removeClass('ui-state-default').addClass('ui-state-disabled');\r\n            } else {\r\n                decBtn.removeAttr(\"disabled\").addClass('ui-state-default').removeClass('ui-state-disabled');\r\n            }\r\n    \r\n          });\r\n        }\r\n    },\r\n\r\n    _hideonexternalclick: function(e) {\r\n        if (jQuery(e.target).closest('.ui-keyboard').length < 1) {\r\n            jQuery('.ui-keyboard').hide();\r\n        }\r\n    },\r\n\r\n    _buildKeyboard: function(ui) {\r\n        var container = jQuery('<div></div>').addClass('ui-keyboard').addClass('ui-widget-content').addClass('ui-widget').hide();\r\n        //build preview display\r\n        var previewInput = ui.element.clone().attr('name', 'preview').attr('readonly', 'readonly').addClass('ui-state-active').addClass('ui-keyboard-preview');\r\n        //build preview container and append preview display\r\n        var entryPreview = jQuery('<div></div>').append(previewInput).appendTo(container);\r\n        //build default button\r\n        keyBtn = jQuery('<input />').attr('type', 'button').addClass('ui-keyboard-button').addClass('ui-state-default');\r\n        actionKey = keyBtn.clone().addClass('ui-keyboard-actionkey');\r\n        for (row in this.layouts[this.options.layout]) {\r\n            currentRow = this.layouts[this.options.layout][row];\r\n            newRow = jQuery('<div></div>').attr('id', 'ui-keyboard-row' + row).addClass('ui-keyboard-row').appendTo(container);\r\n    \r\n            for (set in currentRow) {\r\n                newSet = jQuery('<div></div>').addClass('ui-keyboard-keyset').appendTo(newRow);\r\n                if (set == 1) {\r\n                    newSet.addClass('ui-keyboard-shiftset').hide();\r\n                }\r\n                currentSet = currentRow[set];\r\n                keys = currentSet.split(/\\s+/);\r\n                for (key in keys) {\r\n                    //if it's an action key\r\n                    if (/^{\\S+}$/.test(keys[key])) {\r\n                        action = keys[key].match(/^{(\\S+)}$/)[1];\r\n                        if (action == 'space') {\r\n                            actionKey.clone().attr('name', 'key_space').val('Space').addClass('ui-keyboard-space').click(function() {\r\n                                previewInput.val(\r\n                                previewInput.val() + ' ');\r\n                            }).appendTo(newSet);\r\n                        } else if (action == 'bksp') {\r\n                            actionKey.clone().attr('name', 'key_bksp').val('<Bksp').click(function() {\r\n                                previewInput.val(\r\n                                previewInput.val().substring(\r\n                                0, previewInput.val().length - 1));\r\n                            }).appendTo(newSet);\r\n                        } else if (action == 'shift') {\r\n                            actionKey.clone().attr('name', 'key_shift').val('Shift').click(function() {\r\n                                hidden = container.find('.ui-keyboard-keyset:hidden');\r\n                                visible = container.find('.ui-keyboard-keyset:visible');\r\n                                visible.hide();\r\n                                hidden.show();\r\n                            }).appendTo(newSet);\r\n                        } else if (action == 'accept') {\r\n                            actionKey.clone().attr('name', 'key_accept').val('Accept').addClass('ui-state-highlight').removeClass('ui-state-active').click(function() {\r\n                                ui.element.val(\r\n                                previewInput.val());\r\n                                container.hide();\r\n                            }).appendTo(newSet);\r\n                        } else if (action == 'cancel') {\r\n                            actionKey.clone().attr('name', 'key_cancel').val('Cancel').addClass('ui-state-highlight').removeClass('ui-state-active').click(function() {\r\n                                container.hide();\r\n                            }).appendTo(newSet);\r\n                        } else if (/^sp:\\.?\\d+$/.test(action)) {\r\n                            margin = action.match(/^sp:(\\.?\\d+)$/)[1];\r\n                            jQuery('<span>&nbsp;</span>').css('margin', '0 ' + margin + 'em').appendTo(newSet);\r\n                        } else if (action == \"dec\") {\r\n                            keyBtn.clone().attr('name', 'key_decimal').val('.').appendTo(newSet);\r\n                        } else if (action == \"neg\") {\r\n                            actionKey.clone().attr('name', 'key_negative').val('+/-').click(function() {\r\n                            if (/^\\-?\\d*\\.?\\d*$/.test(\r\n                                previewInput.val())) {\r\n                                previewInput.val(\r\n                                (previewInput.val() * -1));\r\n                                }\r\n                            }).appendTo(newSet);\r\n                        } else if (action == \"return\") {\r\n                            actionKey.clone().attr('name', 'key_return').val('Return').click(function() {\r\n                                previewInput.val(\r\n                                previewInput.val() + ' \\n');\r\n                            }).appendTo(newSet);\r\n                        }\r\n                    } else {\r\n                        keyBtn.clone().attr('name', 'key_' + row + '_' + key).val(keys[key]).appendTo(newSet);\r\n                    }\r\n                }\r\n        \r\n            }\r\n        \r\n        }\r\n    \r\n        return container;\r\n    }\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":12849}]],"length":12849}
{"contributors":[],"silentsave":false,"ts":1358443274247,"patch":[[{"diffs":[[0,"/"],[-1,"*\r\njQuery UI Virtual Keyboard Widget\r\nVersion 1.4.1\r\n\r\nAuthor: Jeremy Satterfield\r\n-----------------------------------------\r\nCreative Commons Attribution-Share Alike 3.0 Unported License\r\nhttp://creativecommons.org/licenses/by-sa/3.0/\r\n-----------------------------------------\r\n\r\nAn on-screen virtual keyboard embedded within the browser window which\r\nwill popup when a specified entry field is focused. The user can then\r\ntype and preview their input before Accepting or Canceling.\r\n\r\nAs a plugin to jQuery UI styling and theme will automatically  \r\nmatch that used by jQuery UI with the exception of the required\r\nCSS listed below.\r\n\r\nRequires: \r\n    jQuery\r\n    jQuery UI\r\n\r\nUsage:\r\n    $('input[type=text], input[type=password], textarea')\r\n        .keyboard({\r\n            layout:\"alpha\"\r\n        });\r\n\r\nOptions:\r\n    layout\r\n        [String] specify which keyboard layout to use\r\n        qwerty - Standard QWERTY layout (Default)\r\n        alpha  - Alphabetical layout\r\n        dvorak - Dvorak Simplified layout\r\n        num    - Numerical (ten-key) layout\r\n        custom - Uses a custom layout as defined by the customLayout option\r\n    \r\n    customLayout\r\n        [Array] Specify a customer layout\r\n            An Array of arrays\r\n            Each internal array is a new keyboard row\r\n            Each internal array can contain either one or two \r\n                String elements (Lower case and Upper \r\n                case respectively)\r\n            Each string element must have each character\r\n                or key seperated by a space\r\n            Special/\"Action\" keys include:\r\n                {space}     - Spacebar\r\n                {bksp}      - Backspace\r\n                {shift}     - Shift/Capslock\r\n                {return}    - Return/New Line\r\n                {accept}    - Updates element value and closes keyboard\r\n                {cancel}    - Clears changes and closes keyboard\r\n                {dec}       - Decimal for numeric entry, only allows one decimal\r\n                {neg}       - Negative for numeric entry\r\n                {sp:#}      - Replace # with a numerical value, \r\n                                adds blank space, value of 1 ~ width of one key\r\n\r\nCSS:\r\n    .ui-keyboard{padding: .3em; position: absolute; z-index: 16000;}\r\n    .ui-keyboard-button{height: 2em; width: 2em; margin: .1em;}\r\n    .ui-keyboard-actionkey{width: 4em;}\r\n    .ui-keyboard-space{width: 15em;}\r\n    .ui-keyboard-preview{width: 100%; text-align: left;}  \r\n\r\nTODO:\r\n\r\nChangelog:\r\n    11/18/2010  1.4.1   Attach keyboard to the body tag for instances where \r\n                            a parent element is position relative\r\n                        Add focus method to refocus the input preview so that \r\n                            a cursor is visible\r\n                1.4     Update positioning to jQuery UI 1.8 position method\r\n                        Other tweaks for cleaning code\r\n    1/17/2010   1.3     Hide keyboard when clicking outside of keyboard\r\n              Tweek positioning to fit better on screen if page \r\n                  scrolled or resized\r\n  1/15/2010   1.2     Align keyboard with element it is called from\r\n              Append keyboard DOM to elements parent instead of body\r\n    10/30/2009  1.1     Change Preview window to clone the selected element\r\n                            to match the proper formatting of the element\r\n                            (i.e. not showing characters in password fields)\r\n                        Add Return key to insert new lines into textareas\r\n                        Change style of Accept and Cancel buttons \r\n                            to \"ui-state-highlight\" to standout\r\n                        Add ability for designer to create a custom keyboard \r\n                            layout\r\n    10/21/2009  1.0     initial build\r\n*/\r\njQuery.widget('ui.keyboard', {\r\n    layouts: {\r\n        \"qwerty\": [\r\n          ['1 2 3 4 5 6 7 8 9 0 - = `', '! @ # $ % ^ & * ( ) _ + ~'],\r\n          ['q w e r t y u i o p [ ] \\\\', 'Q W E R T Y U I O P { } |'],\r\n          ['{sp:.5} a s d f g h j k l ; \\' {return}', '{sp:.5} A S D F G H J K L : \" {return}'],\r\n          ['{sp:1} z x c v b n m , . / {shift}', '{sp:1} Z X C V B N M < > ? {shift}'],\r\n          ['{accept} {space} {cancel} {bksp}', '{accept} {space} {cancel} {bksp}']\r\n        ],\r\n        \"alpha\": [\r\n          ['1 2 3 4 5 6 7 8 9 0 - = `', '! @ # $ % ^ & * ( ) _ + ~'],\r\n          ['a b c d e f g h i j [ ] \\\\', 'A B C D E F G H I J { } |'],\r\n          ['{sp:.5} k l m n o p q r s ; \\' {return}', '{sp:.5} K L M N O P Q R S : \" {return}'],\r\n          ['{sp:1} t u v w x y z , . / {shift}', '{sp:1} T U V W X Y Z < > ? {shift}'],\r\n          ['{accept} {space} {cancel} {bksp}', '{accept} {space} {cancel} {bksp}']\r\n        ],\r\n        \"dvorak\": [\r\n          ['1 2 3 4 5 6 7 8 9 0 [ ] `', '! @ # $ % ^ & * ( ) { } ~'],\r\n          ['\\' , . p y f g c r l / = \\\\', '\" < > P Y F G C R L ? + |'],\r\n          ['{sp:.5} a o e u i d h t n s - {return}', '{sp:.5} A O E U I D H T N S _ {return}'],\r\n          ['{sp:1} ; q j k x b m w v z {shift}', '{sp:1} : Q J K X B M W V Z {shift}'],\r\n          ['{accept} {space} {cancel} {bksp}', '{accept} {space} {cancel} {bksp}']\r\n        ],\r\n        \"num\": [\r\n          ['1 2 3 {bksp}'],\r\n          ['4 5 6 {accept}'],\r\n          ['7 8 9 {cancel}'],\r\n          ['0 {dec} {neg}']\r\n        ],\r\n        \"gwg\": [\r\n          ['a b c d e f g h i j', 'A B C D E F G H I J'],\r\n          ['k l m n o p q r s', 'K L M N O P Q R S'],\r\n          ['t u v w x y z', 'T U V W X Y Z']\r\n        ]\r\n    },\r\n\r\n    _init: function() {\r\n        this.options.layout = this.options.layout || \"qwerty\";\r\n        this.layouts.custom = this.options.customLayout || [\r\n          ['{cancel}']\r\n        ];\r\n        var ui = this;\r\n        var element = ui.element;\r\n        var keyboard = this._buildKeyboard(ui);\r\n        var allKeys = keyboard.find('.ui-keyboard-button');\r\n        var inputKeys = allKeys.filter(':not(.ui-keyboard-actionkey)');\r\n        var previewInput = keyboard.find('.ui-keyboard-preview');\r\n        var decBtn = keyboard.find('[name=key_decimal]');\r\n        var clickListener = this.options.clickListener;\r\n        if (!clickListener) {\r\n            clickListener = function(inputKey) {};\r\n        }\r\n    \r\n        jQuery(document).unbind('mousedown', this._hideonexternalclick).bind('mousedown', this._hideonexternalclick);\r\n    \r\n        keyboard.position({\r\n          of: element,\r\n          my: \"left top\",\r\n          at: \"left top\",\r\n          collision: \"fit\",\r\n        });\r\n          \r\n        element.focus(function() {\r\n            var element = jQuery(this)\r\n            jQuery('.ui-keyboard').hide();\r\n            previewInput.val(element.val());\r\n    \r\n            keyboard.show();\r\n            previewInput.scrollTop(previewInput.attr('scrollHeight')).focus();\r\n        });\r\n    \r\n        jQuery('body').append(keyboard);\r\n    \r\n        inputKeys.click(function() {\r\n            clickListener(this.value);\r\n            previewInput.val(previewInput.val() + this.value)\r\n        });\r\n    \r\n        allKeys.click(function() {\r\n            previewInput.scrollTop(previewInput.attr('scrollHeight')).focus();\r\n        })\r\n    \r\n        if (decBtn.length > 0) {\r\n            allKeys.click(function() {\r\n            if (/\\./.test(previewInput.val())) {\r\n                decBtn.attr('disabled', 'disabled').removeClass('ui-state-default').addClass('ui-state-disabled');\r\n            } else {\r\n                decBtn.removeAttr(\"disabled\").addClass('ui-state-default').removeClass('ui-state-disabled');\r\n            }\r\n    \r\n          });\r\n        }\r\n    },\r\n\r\n    _hideonexternalclick: function(e) {\r\n        if (jQuery(e.target).closest('.ui-keyboard').length < 1) {\r\n            jQuery('.ui-keyboard').hide();\r\n        }\r\n    },\r\n\r\n    _buildKeyboard: function(ui) {\r\n        var container = jQuery('<div></div>').addClass('ui-keyboard').addClass('ui-widget-content').addClass('ui-widget').hide();\r\n        //build preview display\r\n        var previewInput = ui.element.clone().attr('name', 'preview').attr('readonly', 'readonly').addClass('ui-state-active').addClass('ui-keyboard-preview');\r\n        //build preview container and append preview display\r\n        var entryPreview = jQuery('<div></div>').append(previewInput).appendTo(container);\r\n        //build default button\r\n        keyBtn = jQuery('<input />').attr('type', 'button').addClass('ui-keyboard-button').addClass('ui-state-default');\r\n        actionKey = keyBtn.clone().addClass('ui-keyboard-actionkey');\r\n        for (row in this.layouts[this.options.layout]) {\r\n            currentRow = this.layouts[this.options.layout][row];\r\n            newRow = jQuery('<div></div>').attr('id', 'ui-keyboard-row' + row).addClass('ui-keyboard-row').appendTo(container);\r\n    \r\n            for (set in currentRow) {\r\n                newSet = jQuery('<div></div>').addClass('ui-keyboard-keyset').appendTo(newRow);\r\n                if (set == 1) {\r\n                    newSet.addClass('ui-keyboard-shiftset').hide();\r\n                }\r\n                currentSet = currentRow[set];\r\n                keys = currentSet.split(/\\s+/);\r\n                for (key in keys) {\r\n                    //if it's an action key\r\n                    if (/^{\\S+}$/.test(keys[key])) {\r\n                        action = keys[key].match(/^{(\\S+)}$/)[1];\r\n                        if (action == 'space') {\r\n                            actionKey.clone().attr('name', 'key_space').val('Space').addClass('ui-keyboard-space').click(function() {\r\n                                previewInput.val(\r\n                                previewInput.val() + ' ');\r\n                            }).appendTo(newSet);\r\n                        } else if (action == 'bksp') {\r\n                            actionKey.clone().attr('name', 'key_bksp').val('<Bksp').click(function() {\r\n                                previewInput.val(\r\n                                previewInput.val().substring(\r\n                                0, previewInput.val().length - 1));\r\n                            }).appendTo(newSet);\r\n                        } else if (action == 'shift') {\r\n                            actionKey.clone().attr('name', 'key_shift').val('Shift').click(function() {\r\n                                hidden = container.find('.ui-keyboard-keyset:hidden');\r\n                                visible = container.find('.ui-keyboard-keyset:visible');\r\n                                visible.hide();\r\n                                hidden.show();\r\n                            }).appendTo(newSet);\r\n                        } else if (action == 'accept') {\r\n                            actionKey.clone().attr('name', 'key_accept').val('Accept').addClass('ui-state-highlight').removeClass('ui-state-active').click(function() {\r\n                                ui.element.val(\r\n                                previewInput.val());\r\n                                container.hide();\r\n                            }).appendTo(newSet);\r\n                        } else if (action == 'cancel') {\r\n                            actionKey.clone().attr('name', 'key_cancel').val('Cancel').addClass('ui-state-highlight').removeClass('ui-state-active').click(function() {\r\n                                container.hide();\r\n                            }).appendTo(newSet);\r\n                        } else if (/^sp:\\.?\\d+$/.test(action)) {\r\n                            margin = action.match(/^sp:(\\.?\\d+)$/)[1];\r\n                            jQuery('<span>&nbsp;</span>').css('margin', '0 ' + margin + 'em').appendTo(newSet);\r\n                        } else if (action == \"dec\") {\r\n                            keyBtn.clone().attr('name', 'key_decimal').val('.').appendTo(newSet);\r\n                        } else if (action == \"neg\") {\r\n                            actionKey.clone().attr('name', 'key_negative').val('+/-').click(function() {\r\n                            if (/^\\-?\\d*\\.?\\d*$/.test(\r\n                                previewInput.val())) {\r\n                                previewInput.val(\r\n                                (previewInput.val() * -1));\r\n                                }\r\n                            }).appendTo(newSet);\r\n                        } else if (action == \"return\") {\r\n                            actionKey.clone().attr('name', 'key_return').val('Return').click(function() {\r\n                                previewInput.val(\r\n                                previewInput.val() + ' \\n');\r\n                            }).appendTo(newSet);\r\n                        }\r\n                    } else {\r\n                        keyBtn.clone().attr('name', 'key_' + row + '_' + key).val(keys[key]).appendTo(newSet);\r\n                    }\r\n                }\r\n        \r\n            }\r\n        \r\n        }\r\n    \r\n        return container;\r\n    }\r\n}"],[1,"/ jQuery Plugin Boilerplate\r\n// A boilerplate for jumpstarting jQuery plugins development\r\n// version 1.0, Jun 24th, 2011\r\n// by François Germain\r\n\r\n(function($) {\r\n\r\n    //\tStatic private vars\r\n\tvar pluginName = 'keyboard',\r\n\t\temptyKey = {\r\n\t\t\t//\tStatic public vars\r\n\t\t\ttext:\t'',\r\n\t\t\talt:\t[],\r\n\t\t\tname:\t''\r\n\t\t};\r\n\r\n\t$[pluginName] = function(dom, options) {\r\n\t\tvar\r\n\t\tplugin\t\t= this,\r\n\t\tevent\t\t= $(document.createElement('div')),\r\n\t\tdom\t\t\t= dom,\r\n\t\telement\t\t= $(dom),\r\n\t\tdefaults\t= {\r\n\t\t\telements:\t{\r\n\t\t\t\tkeyboard:\t'<div class=\"keyboard\"></div>',\r\n\t\t\t\trow:\t\t'<ul class=\"keyboard-row\"></ul>',\r\n\t\t\t\tkey:\t\t'<li class=\"keyboard-key\"></li>',\r\n\t\t\t\talt:\t\t'<ul class=\"keyboard-alt\"></ul>',\r\n\t\t\t\taltKey:\t\t'<li class=\"keyboard-alt-key\"></li>'\r\n\t\t\t},\r\n\t\t\taltDelay:\t\t500,\r\n\t\t\tclassPrefix:\t'keyboard',\r\n\t\t\tkeyboard: [],\r\n\t\t\tplugin: function(e) {\r\n\t\t\t\te[pluginName]('bind', 'print', function(e, o) {\r\n\t\t\t\t\tconsole.log(o.text);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsettings\t= {},\r\n\t\t//TODO: clean all this vars\r\n\t\tkeyboard,\r\n\t\ttimer\t= NaN,\r\n\t\trows\t= [],\r\n\t\tcap\t\t= false,\r\n\t\tlocked\t= false,\r\n\t\tkeyPressed,\r\n\t\t\r\n\t\t// Private methods\r\n\t\tinit = function(rows) {\r\n\t\t\t// Settings\r\n\t\t\tsettings\t= $.extend({}, defaults, options);\r\n\t\t\tif(typeof settings.plugin !== 'object') {\r\n\t\t\t\tsettings.plugin\t= [settings.plugin];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Keyboard\r\n\t\t\tkeyboard\t= $(settings.elements.keyboard).appendTo(element);\r\n\t\t\tplugin.methods.keyboard(settings.keyboard);\r\n\t\t\t\r\n\t\t\t// Events\r\n\t\t\t$(document).bind('mouseup.'+pluginName, function(){\r\n\t\t\t\treleaseKey();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Plugins\r\n\t\t\tfor(i in settings.plugin) {\r\n\t\t\t\tplugin.methods.plug(settings.plugin[i]);\r\n\t\t\t}\r\n\t\t},\r\n\t\treleaseKey = function(key, alt) {\r\n\t\t\tif(keyPressed) {\r\n\t\t\t\tkeyPressed.removeClass(settings.classPrefix + '-held');\r\n\t\t\t\tkeyPressed\t= null;\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t\ttimer\t\t= NaN;\r\n\t\t\t\tif(typeof key !== 'undefined') {\r\n\t\t\t\t\tif(typeof alt === 'undefined') {\r\n\t\t\t\t\t\talt\t= false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar\ttext\t= alt !== false\r\n\t\t\t\t\t\t\t\t? (cap ? key.cap.alt[alt] : key.alt[alt])\r\n\t\t\t\t\t\t\t\t: (cap ? key.cap.text : key.text);\r\n\t\t\t\t\tif(key.action !== false && (!key.action || key.action(element) !== false)) {\r\n\t\t\t\t\t\ttrigger('print', {key: key, cap: cap, alt:alt, text: text});\r\n\t\t\t\t\t\tif(!locked && cap) {\r\n\t\t\t\t\t\t\tplugin.methods.capToggle();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttrigger('release', {key: key, cap: cap, alt:alt, text: text});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tisValidRow\t= function(row) {\r\n\t\t\treturn\ttypeof row === 'number' && row === Math.round(row);\r\n\t\t},\r\n\t\tnewKeyboard = function(newKeyboard) {\r\n\t\t\tkeyboard.html('');\r\n\t\t\trows\t= [];\r\n\t\t\tfor(i in newKeyboard) {\r\n\t\t\t\tplugin.methods.addRow(newKeyboard[i]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tnewRow = function(row) {\r\n\t\t\tvar i\t= rows.length;\r\n\t\t\twhile(i <= row) {\r\n\t\t\t\trows.push([]);\r\n\t\t\t\tkeyboard.append(settings.elements.row);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t},\r\n\t\tnewKey = function(row, key) {\r\n\t\t\tif(typeof key !== 'object') {\r\n\t\t\t\tkey\t= {text: key};\r\n\t\t\t}\r\n\t\t\tkey\t= $.extend({}, emptyKey, key);\r\n\t\t\tif(typeof key.cap !== 'object') {\r\n\t\t\t\tif(typeof key.cap !== 'undefined') {\r\n\t\t\t\t\tkey.cap\t= {text: key.cap};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tkey.cap\t= {};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(typeof key.cap.alt === 'undefined') {\r\n\t\t\t\tkey.cap.alt\t= [];\r\n\t\t\t\tfor(var i in key.alt) {\r\n\t\t\t\t\tkey.cap.alt[i]\t= key.alt[i].toUpperCase();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(typeof key.cap.text === 'undefined') {\r\n\t\t\t\tkey.cap.text\t= key.text.toUpperCase()\r\n\t\t\t}\r\n\t\t\trows[row].push(key);\r\n\t\t\tvar keyEl\t= $(settings.elements.key).appendTo(keyboard.children(':eq('+row+')'));\r\n\t\t\tkeyEl.data(pluginName+'-key', key);\r\n\t\t\tkeyEl.text(cap ? key.cap.text : key.text);\r\n\t\t\tif(key.name) {\r\n\t\t\t\tkeyEl.addClass(settings.classPrefix + '-key-' + key.name);\r\n\t\t\t}\r\n\t\t\tupdateAlts(keyEl);\r\n\t\t\tkeyEl.bind('mouseup.' + pluginName, function() {\r\n\t\t\t\tif(keyPressed) {\r\n\t\t\t\t\treleaseKey(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tkeyEl.bind('mousedown.' + pluginName, function() {\r\n\t\t\t\tkeyPressed\t=\tkeyEl;\r\n\t\t\t\ttimer\t=\tsetTimeout(function() {\r\n\t\t\t\t\tkeyEl.addClass(settings.classPrefix + '-held');\r\n\t\t\t\t}, settings.altDelay);\r\n\t\t\t});\r\n\t\t},\r\n\t\tupdateAlts = function(keyEl) {\r\n\t\t\tvar key = keyEl.data(pluginName + '-key');\r\n\t\t\tif(key.alt) {\r\n\t\t\t\tvar\taltEl\t= $(settings.elements.alt).appendTo(keyEl);\r\n\t\t\t\tfor(var k in key.alt) {\r\n\t\t\t\t\tvar\taltKeyEl\t= $(settings.elements.altKey).appendTo(altEl);\r\n\t\t\t\t\taltKeyEl.data(pluginName + '-key', key);\r\n\t\t\t\t\taltKeyEl.data(pluginName + '-alt', k);\r\n\t\t\t\t\taltKeyEl.text(cap ? key.cap.alt[k] : key.alt[k]);\r\n\t\t\t\t\taltKeyEl.bind('mouseup.' + pluginName, function() {\r\n\t\t\t\t\t\treleaseKey($(this).data(pluginName + '-key'), $(this).data(pluginName + '-alt'));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateKeys = function() {\r\n\t\t\tfor(var i in rows) {\r\n\t\t\t\tvar rowEl\t= keyboard.children(':eq('+i+')');\r\n\t\t\t\tfor(j in rows[i]) {\r\n\t\t\t\t\tvar key\t\t\t= rows[i][j];\r\n\t\t\t\t\tvar keyEl\t\t= rowEl.children(':eq('+j+')');\r\n\t\t\t\t\tif(cap) {\r\n\t\t\t\t\t\tkeyEl.text(key.cap.text);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tkeyEl.text(key.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateAlts(keyEl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttrigger\t= function() {\r\n\t\t\targuments[0]\t= pluginName + '-' +  arguments[0];\r\n\t\t\telement.trigger.apply(element, arguments);\r\n\t\t\treturn\tdom;\r\n\t\t};\r\n\t\t\r\n\t\t// Public methods\r\n\t\tplugin.methods = {\r\n\t\t\tbind: function() {\r\n\t\t\t\targuments[0]\t= pluginName + '-' +  arguments[0];\r\n\t\t\t\telement.bind.apply(element, arguments);\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\taddRow: function(keys) {\r\n\t\t\t\trow\t= rows.length;\r\n\t\t\t\tnewRow(row);\r\n\t\t\t\tfor(var i in keys) {\r\n\t\t\t\t\tnewKey(row, keys[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\taddKeys: function(row, keys) {\r\n\t\t\t\tif(isValidRow(row)) {\r\n\t\t\t\t\tif(!rows[row]) {\r\n\t\t\t\t\t\tnewRow(row);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var i in keys) {\r\n\t\t\t\t\t\tnewKey(row, keys[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\taddKey: function(row, key) {\r\n\t\t\t\tif(isValidRow(row)) {\r\n\t\t\t\t\tif(!rows[row]) {\r\n\t\t\t\t\t\tnewRow(row);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewKey(row, key);\r\n\t\t\t\t}\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\tplug: function(newPlugin) {\r\n\t\t\t\tif(typeof newPlugin === 'string') {\r\n\t\t\t\t\tnewPlugin\t= $[pluginName].plugins[newPlugin];\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof newPlugin === 'function') {\r\n\t\t\t\t\tnewPlugin(element);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcapToggle: function(lock) {\r\n\t\t\t\tcap\t\t= !cap;\r\n\t\t\t\tlocked\t= Boolean(lock) && cap;\r\n\t\t\t\tif(cap && locked) {\r\n\t\t\t\t\telement.addClass('keyboard-capsLocked');\r\n\t\t\t\t\telement.removeClass('keyboard-caps');\r\n\t\t\t\t} else if(cap) {\r\n\t\t\t\t\telement.addClass('keyboard-caps');\r\n\t\t\t\t\telement.removeClass('keyboard-capsLocked');\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.removeClass('keyboard-caps');\r\n\t\t\t\t\telement.removeClass('keyboard-capsLocked');\r\n\t\t\t\t}\r\n\t\t\t\tupdateKeys();\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\tcap: function(lock) {\r\n\t\t\t\tcap\t\t= true;\r\n\t\t\t\tlocked\t= Boolean(lock);\r\n\t\t\t\tif(cap && locked) {\r\n\t\t\t\t\telement.addClass('keyboard-capsLocked');\r\n\t\t\t\t\telement.removeClass('keyboard-caps');\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.addClass('keyboard-caps');\r\n\t\t\t\t\telement.removeClass('keyboard-capsLocked');\r\n\t\t\t\t}\r\n\t\t\t\tupdateKeys();\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\tunCap: function() {\r\n\t\t\t\tcap\t\t= false;\r\n\t\t\t\tlocked\t= false;\r\n\t\t\t\telement.removeClass('keyboard-caps');\r\n\t\t\t\telement.removeClass('keyboard-capsLocked');\r\n\t\t\t\tupdateKeys();\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\tkeyboard: function(def) {\r\n\t\t\t\tif(typeof def === 'string') {\r\n\t\t\t\t\tdef\t= $[pluginName].keyboards[def];\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof def === 'object') {\r\n\t\t\t\t\tnewKeyboard(def);\r\n\t\t\t\t}\r\n\t\t\t\treturn\tkeyboard;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\telement.data(pluginName, plugin);\r\n\t\tinit();\r\n\r\n\t}\r\n\t$[pluginName].keyboards\t= {};\r\n\t$[pluginName].plugins\t= {};\r\n\r\n\t$.fn[pluginName] = function(options) {\r\n\t\tvar\targs\t= arguments,\r\n\t\t\tchain\t= this;\r\n        this.each(function() {\r\n        \tvar\ti\t=\t$(this);\r\n            if (undefined == (plugin = i.data(pluginName))) {\r\n                var plugin = new $[pluginName](this, options);\r\n            }\r\n            if (plugin.methods[options]) {\r\n            \tif((r = plugin.methods[options].apply( plugin, Array.prototype.slice.call( args, 1 ))) !== this) {\r\n\t            \tchain\t= r;\r\n\t            \treturn\tfalse;\r\n            \t}\r\n            }\r\n        });\r\n\t\treturn\tchain;\r\n\t}\r\n\r\n})(jQuery"],[0,");"]],"start1":0,"start2":0,"length1":12849,"length2":7927}]],"length":7927,"saved":false}
{"ts":1358443322595,"patch":[[{"diffs":[[0,"jQuery);"],[1,"\r\n(function($) {\r\n    $.keyboard.keyboards.qwerty\t= [\r\n\t\t['@','1','2','3','4','5','6','7','8','9','0',{text:'⌫',name:'backSpace',action:function(e){return false;}}],\r\n\t\t[{text:'⇥', cap: {text:'⇤'},name:'tab', action:false},'q','w','e','r','t','y','u','i','o','p',{text:'⏎',name:'return',action:false}],\r\n\t\t[{text:'⇪',name:'capsLock',action:function(e){e.keyboard('capToggle',true); return false;}},'a','s','d','f','g','h','j','k','l',{text:',', alt:[':',';']}],\r\n\t\t[{text:'⇧',name:'leftShift',action:function(e){e.keyboard('capToggle'); return false;}},'z','x','c','v','b','n','m',{text:'.', alt:['?','!',';']},'\\'',{text:':)', alt:[';)','X)','8)',':(']},{text:'⇧',name:'rightShift',action:function(e){e.keyboard('capToggle'); return false;}}],\r\n\t\t[{text:' ',name:'space'},{text:'←',action:false,name:'leftArrow'},{text:'→',action:false,name:'rightArrow'}]\r\n\t];\r\n})(jQuery);"]],"start1":7919,"start2":7919,"length1":8,"length2":882}]],"length":8801,"saved":false}
{"ts":1358443434996,"patch":[[{"diffs":[[0,"uery);\r\n"],[1,"\r\n"],[0,"(functio"]],"start1":7921,"start2":7921,"length1":16,"length2":18},{"diffs":[[0,"}]\r\n\t];\r\n})(jQuery);"],[1,"\r\n\r\n(function($) {\r\n    $.keyboard.plugins.form\t= function(e) {\r\n\t\tfunction trace(e) {\r\n\t\t\to = {};\r\n\t\t\tfor (i in e) {\r\n\t\t\t\to[i]\t=\te[i];\r\n\t\t\t}\r\n\t\t\tconsole.log(o);\r\n\t\t}\r\n\t\tvar input\t\t= null,\r\n\t\t\tblured\t\t= null,\r\n\t\t\tdelay\t\t= 500,\r\n\t\t\tshown\t\t= false,\r\n\t\t\tkeyboard\t= e.keyboard('keyboard'),\r\n\t\t\tsetFocus\t= function(e) {\r\n\t\t\t\tinput\t= e;\r\n\t\t\t\tblured\t= false;\r\n\t\t\t\tif(!shown) {\r\n\t\t\t\t\tkeyboard.stop(true, true).slideDown();\r\n\t\t\t\t\tshown\t= true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tunsetFocus\t= function(e) {\r\n\t\t\t\t// IE trigger setFocus before blur\r\n\t\t\t\tif(e.get(0) === input.get(0)) {\r\n\t\t\t\t\tblured\t= true;\r\n\t\t\t\t\t// Let time to a potencial blur event\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tif(blured) {\r\n\t\t\t\t\t\t\tinput\t= null;\r\n\t\t\t\t\t\t\tif(shown) {\r\n\t\t\t\t\t\t\t\tkeyboard.stop(true, true).slideUp();\r\n\t\t\t\t\t\t\t\tshown\t= false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, delay);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\r\n\t\t// Use\r\n\t\te.keyboard('bind', 'print', function(e, o) {\r\n\t\t\tif(input) {\r\n\t\t\t\tinput.selection().replace(o.text);\r\n\t\t\t}\r\n\t\t});\r\n\t\te.keyboard('bind', 'release', function(e, o) {\r\n\t\t\tif(input !== null) {\r\n\t\t\t\t//\tTabulation\r\n\t\t\t\tif(o.key.name === 'tab') {\r\n\t\t\t\t\tif(o.cap) {\r\n\t\t\t\t\t\tnewInput\t=\t$(\":input:eq(\" + ($(\":input\").index(input) - 1) + \")\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInput\t=\t$(\":input:eq(\" + ($(\":input\").index(input) + 1) + \")\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(newInput.length) {\r\n\t\t\t\t\t\tinput\t\t= newInput;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn\tinput.trigger('blur');\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tSubmition\r\n\t\t\t\t} else if(o.key.name === 'enter') {\r\n\t\t\t\t\tvar form\t= input.parents('form');\r\n\t\t\t\t\tif(form.length() > 0) {\r\n\t\t\t\t\t\tform.submit();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tDelete backward\r\n\t\t\t\t} else if(o.key.name === 'backSpace') {\r\n\t\t\t\t\tif(input.selection().length()) {\r\n\t\t\t\t\t\tinput.selection().clear();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinput.selection().set(input.selection().start() - 1, 1).clear();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tMove carret\r\n\t\t\t\t} else if(o.key.name === 'leftArrow') {\r\n\t\t\t\t\tinput.selection().set(input.selection().start() - 1, 0);\r\n\t\t\t\t} else if(o.key.name === 'rightArrow') {\r\n\t\t\t\t\tinput.selection().set(input.selection().start() + 1, 0);\r\n\t\t\t\t}\r\n\t\t\t\tinput.trigger('focus');\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Show\r\n\t\t$('input[type!=\"submit\"],textarea').live('focus', function(e) {\r\n\t\t\tsetFocus($(e.target));\r\n\t\t});\r\n\t\t\r\n\t\t// Hide\r\n\t\t$('[type=\"text\"],textarea').bind('blur.keyboard', function(e) {\r\n\t\t\tunsetFocus($(e.target));\r\n\t\t});\r\n\t\t\r\n\t\t// Keyboard init\r\n\t\tif(!keyboard.attr('tabindex')) {\r\n\t\t\tif(input) {\r\n\t\t\t\tkeyboard.attr('tabindex', '0');\r\n\t\t\t}\r\n\t\t}\r\n\t\tkeyboard.bind('focus', function() {\r\n\t\t\t\t\tinput.trigger('focus');\r\n\t\t\t\t})\r\n\t\t\t\t.bind('mousedown.keyboard', function() {\r\n\t\t\t\t\tblured\t=\tfalse;\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t})\r\n\t\t\t\t.hide();\r\n\t};\r\n})(jQuery);\r\n\r\n// jQuery Plugin Boilerplate\r\n// A boilerplate for jumpstarting jQuery plugins development\r\n// version 1.0, Jun 24th, 2011\r\n// by François Germain\r\n\r\n(function($) {\r\n    function trace(node) {\r\n\t\tvar e\t= {};\r\n\t\tfor(i in node) {\r\n\t\t\te[i]\t=\tnode[i];\r\n\t\t}\r\n\t\tconsole.log(e);\r\n\t}\r\n\t// Start\r\n\tfunction getSelectionStart(node) {\r\n\t\tif('selectionStart' in node) {\r\n\t\t\treturn\tnode.selectionStart;\r\n\t\t} else if('getSelection' in document) {\r\n\t\t\tif(!node.ownerDocument.getSelection().rangeCount) {\r\n\t\t\t\treturn\tnode.innerText.length;\r\n\t\t\t} else {\r\n\t\t\t\treturn\tnode.ownerDocument.getSelection().getRangeAt(0).startOffset;\r\n\t\t\t}\r\n\t\t} else if('selection' in document) {\r\n\t\t\tconsole.log('IE');\r\n\t\t}\r\n\t}\r\n\tfunction setSelectionStart(node, start) {\r\n\t\tif('selectionStart' in node) {\r\n\t\t\treturn\tnode.selectionStart\t= start;\r\n\t\t} else if('getSelection' in document) {\r\n\t\t\tvar\tselection\t= node.ownerDocument.getSelection(),\r\n\t\t\t\trange\t\t= document.createRange(),\r\n\t\t\t\tend\t\t\t= getSelectionEnd(node);\r\n\t\t\tselection.removeAllRanges();\r\n\t        range.setStart(node.firstChild, start);\r\n\t        range.setEnd(node.firstChild, end);\r\n\t        selection.addRange(range);\r\n\t\t} else if('selection' in document) {\r\n\t\t\tconsole.log('IE');\r\n\t\t}\r\n\t}\r\n\t\r\n\t// End\r\n\tfunction getSelectionEnd(node) {\r\n\t\tif('selectionStart' in node) {\r\n\t\t\treturn\tnode.selectionEnd;\r\n\t\t} else if('getSelection' in document) {\r\n\t\t\tif(!node.ownerDocument.getSelection().rangeCount) {\r\n\t\t\t\treturn\tnode.innerText.length;\r\n\t\t\t} else {\r\n\t\t\t\treturn\tnode.ownerDocument.getSelection().getRangeAt(0).endOffset;\r\n\t\t\t}\r\n\t\t} else if('selection' in document) {\r\n\t\t\tconsole.log('IE');\r\n\t\t}\r\n\t}\r\n\tfunction setSelectionEnd(node, end) {\r\n\t\tif('selectionStart' in node) {\r\n\t\t\treturn\tnode.selectionEnd\t= end;\r\n\t\t} else if('getSelection' in document) {\r\n\t\t\tvar\tselection\t= node.ownerDocument.getSelection(),\r\n\t\t\t\trange\t\t= document.createRange(),\r\n\t\t\t\tstart\t\t= getSelectionStart(node);\r\n\t\t\tselection.removeAllRanges();\r\n\t        range.setStart(node.firstChild, start);\r\n\t        range.setEnd(node.firstChild, end);\r\n\t        selection.addRange(range);\r\n\t\t} else if('selection' in document) {\r\n\t\t\tconsole.log('IE');\r\n\t\t}\r\n\t}\r\n\t\r\n\t// length\r\n\tfunction getSelectionLength(node) {\r\n\t\treturn\tgetSelectionEnd(node) - getSelectionStart(node);\r\n\t}\r\n\tfunction setSelectionLength(node, length) {\r\n\t\tsetSelectionEnd(node, getSelectionStart(node) + length);\r\n\t}\r\n\t\r\n\tfunction set(node, start, n, end) {\r\n\t\tsetSelectionStart(node, start);\r\n\t\tif(end) {\r\n\t\t\tsetSelectionEnd(node, n);\r\n\t\t} else {\r\n\t\t\tsetSelectionLength(node, n);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction replace(node, replace) {\r\n\t\tvar\tel\t= $(node),\r\n\t\t\tstr;\r\n\t\tif(el.is('input,textarea')) {\r\n\t\t\tstr\t= el.val();\r\n\t\t\tel.val(\tstr.substring(0, getSelectionStart(node))\r\n\t\t\t\t+\treplace\r\n\t\t\t\t+\tstr.substring(getSelectionEnd(node)));\r\n\t\t} else {\r\n\t\t\tstr\t= el.text();\r\n\t\t\tconsole.log(getSelectionStart(node));\r\n\t\t\tel.text(str.substring(0, getSelectionStart(node))\r\n\t\t\t\t+\treplace\r\n\t\t\t\t+\tstr.substring(getSelectionEnd(node)));\r\n\t\t}\r\n\t}\r\n\t\r\n\t$.fn.selection = function(length) {\r\n\t\tvar node\t= this.jquery ? this.get(0) : this;\r\n\t\treturn\t{\r\n\t\t\tstart: function(start) {\r\n\t\t\t\tif(typeof start !== 'undefined') {\r\n\t\t\t\t\tsetSelectionStart(node, start);\r\n\t\t\t\t\treturn\tthis;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\tgetSelectionStart(node);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tend: function(end) {\r\n\t\t\t\tif(typeof end !== 'undefined') {\r\n\t\t\t\t\tsetSelectionEnd(node, end);\r\n\t\t\t\t\treturn\tthis;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\tgetSelectionEnd(node);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlength: function(length) {\r\n\t\t\t\tif(typeof length !== 'undefined') {\r\n\t\t\t\t\tsetSelectionLength(node, length);\r\n\t\t\t\t\treturn\tthis;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\tgetSelectionLength(node);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tset: function(start, n, end) {\r\n\t\t\t\tset(node, start, n, end);\r\n\t\t\t\treturn\tthis;\r\n\t\t\t},\r\n\t\t\tclear: function() {\r\n\t\t\t\tthis.replace('');\r\n\t\t\t},\r\n\t\t\treplace: function(string) {\r\n\t\t\t\tvar start\t= getSelectionStart(node);\r\n\t\t\t\treplace(node, string);\r\n\t\t\t\tset(node, start + string.length, 0);\r\n\t\t\t\treturn\tthis;\r\n\t\t\t},\r\n\t\t\tbefore: function(string) {\r\n\t\t\t\tvar start\t= getSelectionStart(node);\r\n\t\t\t\tsetSelectionLength(node, 0);\r\n\t\t\t\treplace(node, string);\r\n\t\t\t\tset(node, start + string.length, 0);\r\n\t\t\t},\r\n\t\t\tafter: function(string) {\r\n\t\t\t\tvar start\t= getSelectionEnd(node);\r\n\t\t\t\tset(node, start, 0);\r\n\t\t\t\treplace(node, string);\r\n\t\t\t\tset(node, start + string.length, 0);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n})(jQuery);"]],"start1":8783,"start2":8783,"length1":20,"length2":7008}]],"length":15791,"saved":false}
{"ts":1358444002682,"patch":[[{"diffs":[[0,"}\r\n\t\t});\r\n\t\t"],[1,"/*"],[0,"\r\n\t\t// Show\r"]],"start1":10870,"start2":10870,"length1":24,"length2":26},{"diffs":[[0,"de();\r\n\t"],[-1,"};"],[1,"    };*/"],[0,"\r\n})(jQu"]],"start1":11420,"start2":11420,"length1":18,"length2":24}]],"length":15799,"saved":false}
{"ts":1358444039760,"patch":[[{"diffs":[[0,"e();"],[1,"*/"],[0,"\r\n"],[-1,"\t"],[0,"    };"],[-1,"*/"],[0,"\r\n})"]],"start1":11421,"start2":11421,"length1":19,"length2":18}]],"length":15798,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358792610744,"patch":[[{"diffs":[[1,"\r\n\r\n"],[0,"// jQuery Plugin Boilerplate"]],"start1":0,"start2":0,"length1":28,"length2":32},{"diffs":[[0,"in\r\n"],[-1,"\r\n(function($) {\r\n\r\n    //\tStatic private vars\r\n\tvar pluginName = 'keyboard',\r\n\t\temptyKey = {\r\n\t\t\t//\tStatic public vars\r\n\t\t\ttext:\t'',\r\n\t\t\talt:\t[],\r\n\t\t\tname:\t''\r\n\t\t};\r\n\r\n\t$[pluginName] = function(dom, options) {\r\n\t\tvar\r\n\t\tplugin\t\t= this,\r\n\t\tevent\t\t= $(document.createElement('div')),\r\n\t\tdom\t\t\t= dom,\r\n\t\telement\t\t= $(dom),\r\n\t\tdefaults\t= {\r\n\t\t\telements:\t{\r\n\t\t\t\tkeyboard:\t'<div class=\"keyboard\"></div>',\r\n\t\t\t\trow:\t\t'<ul class=\"keyboard-row\"></ul>',\r\n\t\t\t\tkey:\t\t'<li class=\"keyboard-key\"></li>',\r\n\t\t\t\talt:\t\t'<ul class=\"keyboard-alt\"></ul>',\r\n\t\t\t\taltKey:\t\t'<li class=\"keyboard-alt-key\"></li>'\r\n\t\t\t},\r\n\t\t\taltDelay:\t\t500,\r\n\t\t\tclassPrefix:\t'keyboard',\r\n\t\t\tkeyboard: [],\r\n\t\t\tplugin: function(e) {\r\n\t\t\t\te[pluginName]('bind', 'print', function(e, o) {\r\n\t\t\t\t\tconsole.log(o.text);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsettings\t= {},\r\n\t\t//TODO: clean all this vars\r\n\t\tkeyboard,\r\n\t\ttimer\t= NaN,\r\n\t\trows\t= [],\r\n\t\tcap\t\t= false,\r\n\t\tlocked\t= false,\r\n\t\tkeyPressed,\r\n\t\t\r\n\t\t// Private methods\r\n\t\tinit = function(rows) {\r\n\t\t\t// Settings\r\n\t\t\tsettings\t= $.extend({}, defaults, options);\r\n\t\t\tif(typeof settings.plugin !== 'object') {\r\n\t\t\t\tsettings.plugin\t= [settings.plugin];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Keyboard\r\n\t\t\tkeyboard\t= $(settings.elements.keyboard).appendTo(element);\r\n\t\t\tplugin.methods.keyboard(settings.keyboard);\r\n\t\t\t\r\n\t\t\t// Events\r\n\t\t\t$(document).bind('mouseup.'+pluginName, function(){\r\n\t\t\t\treleaseKey();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Plugins\r\n\t\t\tfor(i in settings.plugin) {\r\n\t\t\t\tplugin.methods.plug(settings.plugin[i]);\r\n\t\t\t}\r\n\t\t},\r\n\t\treleaseKey = function(key, alt) {\r\n\t\t\tif(keyPressed) {\r\n\t\t\t\tkeyPressed.removeClass(settings.classPrefix + '-held');\r\n\t\t\t\tkeyPressed\t= null;\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t\ttimer\t\t= NaN;\r\n\t\t\t\tif(typeof key !== 'undefined') {\r\n\t\t\t\t\tif(typeof alt === 'undefined') {\r\n\t\t\t\t\t\talt\t= false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar\ttext\t= alt !== false\r\n\t\t\t\t\t\t\t\t? (cap ? key.cap.alt[alt] : key.alt[alt])\r\n\t\t\t\t\t\t\t\t: (cap ? key.cap.text : key.text);\r\n\t\t\t\t\tif(key.action !== false && (!key.action || key.action(element) !== false)) {\r\n\t\t\t\t\t\ttrigger('print', {key: key, cap: cap, alt:alt, text: text});\r\n\t\t\t\t\t\tif(!locked && cap) {\r\n\t\t\t\t\t\t\tplugin.methods.capToggle();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttrigger('release', {key: key, cap: cap, alt:alt, text: text});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tisValidRow\t= function(row) {\r\n\t\t\treturn\ttypeof row === 'number' && row === Math.round(row);\r\n\t\t},\r\n\t\tnewKeyboard = function(newKeyboard) {\r\n\t\t\tkeyboard.html('');\r\n\t\t\trows\t= [];\r\n\t\t\tfor(i in newKeyboard) {\r\n\t\t\t\tplugin.methods.addRow(newKeyboard[i]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tnewRow = function(row) {\r\n\t\t\tvar i\t= rows.length;\r\n\t\t\twhile(i <= row) {\r\n\t\t\t\trows.push([]);\r\n\t\t\t\tkeyboard.append(settings.elements.row);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t},\r\n\t\tnewKey = function(row, key) {\r\n\t\t\tif(typeof key !== 'object') {\r\n\t\t\t\tkey\t= {text: key};\r\n\t\t\t}\r\n\t\t\tkey\t= $.extend({}, emptyKey, key);\r\n\t\t\tif(typeof key.cap !== 'object') {\r\n\t\t\t\tif(typeof key.cap !== 'undefined') {\r\n\t\t\t\t\tkey.cap\t= {text: key.cap};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tkey.cap\t= {};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(typeof key.cap.alt === 'undefined') {\r\n\t\t\t\tkey.cap.alt\t= [];\r\n\t\t\t\tfor(var i in key.alt) {\r\n\t\t\t\t\tkey.cap.alt[i]\t= key.alt[i].toUpperCase();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(typeof key.cap.text === 'undefined') {\r\n\t\t\t\tkey.cap.text\t= key.text.toUpperCase()\r\n\t\t\t}\r\n\t\t\trows[row].push(key);\r\n\t\t\tvar keyEl\t= $(settings.elements.key).appendTo(keyboard.children(':eq('+row+')'));\r\n\t\t\tkeyEl.data(pluginName+'-key', key);\r\n\t\t\tkeyEl.text(cap ? key.cap.text : key.text);\r\n\t\t\tif(key.name) {\r\n\t\t\t\tkeyEl.addClass(settings.classPrefix + '-key-' + key.name);\r\n\t\t\t}\r\n\t\t\tupdateAlts(keyEl);\r\n\t\t\tkeyEl.bind('mouseup.' + pluginName, function() {\r\n\t\t\t\tif(keyPressed) {\r\n\t\t\t\t\treleaseKey(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tkeyEl.bind('mousedown.' + pluginName, function() {\r\n\t\t\t\tkeyPressed\t=\tkeyEl;\r\n\t\t\t\ttimer\t=\tsetTimeout(function() {\r\n\t\t\t\t\tkeyEl.addClass(settings.classPrefix + '-held');\r\n\t\t\t\t}, settings.altDelay);\r\n\t\t\t});\r\n\t\t},\r\n\t\tupdateAlts = function(keyEl) {\r\n\t\t\tvar key = keyEl.data(pluginName + '-key');\r\n\t\t\tif(key.alt) {\r\n\t\t\t\tvar\taltEl\t= $(settings.elements.alt).appendTo(keyEl);\r\n\t\t\t\tfor(var k in key.alt) {\r\n\t\t\t\t\tvar\taltKeyEl\t= $(settings.elements.altKey).appendTo(altEl);\r\n\t\t\t\t\taltKeyEl.data(pluginName + '-key', key);\r\n\t\t\t\t\taltKeyEl.data(pluginName + '-alt', k);\r\n\t\t\t\t\taltKeyEl.text(cap ? key.cap.alt[k] : key.alt[k]);\r\n\t\t\t\t\taltKeyEl.bind('mouseup.' + pluginName, function() {\r\n\t\t\t\t\t\treleaseKey($(this).data(pluginName + '-key'), $(this).data(pluginName + '-alt'));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateKeys = function() {\r\n\t\t\tfor(var i in rows) {\r\n\t\t\t\tvar rowEl\t= keyboard.children(':eq('+i+')');\r\n\t\t\t\tfor(j in rows[i]) {\r\n\t\t\t\t\tvar key\t\t\t= rows[i][j];\r\n\t\t\t\t\tvar keyEl\t\t= rowEl.children(':eq('+j+')');\r\n\t\t\t\t\tif(cap) {\r\n\t\t\t\t\t\tkeyEl.text(key.cap.text);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tkeyEl.text(key.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateAlts(keyEl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttrigger\t= function() {\r\n\t\t\targuments[0]\t= pluginName + '-' +  arguments[0];\r\n\t\t\telement.trigger.apply(element, arguments);\r\n\t\t\treturn\tdom;\r\n\t\t};\r\n\t\t\r\n\t\t// Public methods\r\n\t\tplugin.methods = {\r\n\t\t\tbind: function() {\r\n\t\t\t\targuments[0]\t= pluginName + '-' +  arguments[0];\r\n\t\t\t\telement.bind.apply(element, arguments);\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\taddRow: function(keys) {\r\n\t\t\t\trow\t= rows.length;\r\n\t\t\t\tnewRow(row);\r\n\t\t\t\tfor(var i in keys) {\r\n\t\t\t\t\tnewKey(row, keys[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\taddKeys: function(row, keys) {\r\n\t\t\t\tif(isValidRow(row)) {\r\n\t\t\t\t\tif(!rows[row]) {\r\n\t\t\t\t\t\tnewRow(row);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var i in keys) {\r\n\t\t\t\t\t\tnewKey(row, keys[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\taddKey: function(row, key) {\r\n\t\t\t\tif(isValidRow(row)) {\r\n\t\t\t\t\tif(!rows[row]) {\r\n\t\t\t\t\t\tnewRow(row);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewKey(row, key);\r\n\t\t\t\t}\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\tplug: function(newPlugin) {\r\n\t\t\t\tif(typeof newPlugin === 'string') {\r\n\t\t\t\t\tnewPlugin\t= $[pluginName].plugins[newPlugin];\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof newPlugin === 'function') {\r\n\t\t\t\t\tnewPlugin(element);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcapToggle: function(lock) {\r\n\t\t\t\tcap\t\t= !cap;\r\n\t\t\t\tlocked\t= Boolean(lock) && cap;\r\n\t\t\t\tif(cap && locked) {\r\n\t\t\t\t\telement.addClass('keyboard-capsLocked');\r\n\t\t\t\t\telement.removeClass('keyboard-caps');\r\n\t\t\t\t} else if(cap) {\r\n\t\t\t\t\telement.addClass('keyboard-caps');\r\n\t\t\t\t\telement.removeClass('keyboard-capsLocked');\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.removeClass('keyboard-caps');\r\n\t\t\t\t\telement.removeClass('keyboard-capsLocked');\r\n\t\t\t\t}\r\n\t\t\t\tupdateKeys();\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\tcap: function(lock) {\r\n\t\t\t\tcap\t\t= true;\r\n\t\t\t\tlocked\t= Boolean(lock);\r\n\t\t\t\tif(cap && locked) {\r\n\t\t\t\t\telement.addClass('keyboard-capsLocked');\r\n\t\t\t\t\telement.removeClass('keyboard-caps');\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.addClass('keyboard-caps');\r\n\t\t\t\t\telement.removeClass('keyboard-capsLocked');\r\n\t\t\t\t}\r\n\t\t\t\tupdateKeys();\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\tunCap: function() {\r\n\t\t\t\tcap\t\t= false;\r\n\t\t\t\tlocked\t= false;\r\n\t\t\t\telement.removeClass('keyboard-caps');\r\n\t\t\t\telement.removeClass('keyboard-capsLocked');\r\n\t\t\t\tupdateKeys();\r\n\t\t\t\treturn\tdom;\r\n\t\t\t},\r\n\t\t\tkeyboard: function(def) {\r\n\t\t\t\tif(typeof def === 'string') {\r\n\t\t\t\t\tdef\t= $[pluginName].keyboards[def];\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof def === 'object') {\r\n\t\t\t\t\tnewKeyboard(def);\r\n\t\t\t\t}\r\n\t\t\t\treturn\tkeyboard;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\telement.data(pluginName, plugin);\r\n\t\tinit();\r\n\r\n\t}\r\n\t$[pluginName].keyboards\t= {};\r\n\t$[pluginName].plugins\t= {};\r\n\r\n\t$.fn[pluginName] = function(options) {\r\n\t\tvar\targs\t= arguments,\r\n\t\t\tchain\t= this;\r\n        this.each(function() {\r\n        \tvar\ti\t=\t$(this);\r\n            if (undefined == (plugin = i.data(pluginName))) {\r\n                var plugin = new $[pluginName](this, options);\r\n            }\r\n            if (plugin.methods[options]) {\r\n            \tif((r = plugin.methods[options].apply( plugin, Array.prototype.slice.call( args, 1 ))) !== this) {\r\n\t            \tchain\t= r;\r\n\t            \treturn\tfalse;\r\n            \t}\r\n            }\r\n        });\r\n\t\treturn\tchain;\r\n\t}\r\n\r\n})(jQuery);\r\n\r\n(function($) {\r\n    $.keyboard.keyboards.qwerty\t= [\r\n\t\t['@','1','2','3','4','5','6','7','8','9','0',{text:'⌫',name:'backSpace',action:function(e){return false;}}],\r\n\t\t[{text:'⇥', cap: {text:'⇤'},name:'tab', action:false},'q','w','e','r','t','y','u','i','o','p',{text:'⏎',name:'return',action:false}],\r\n\t\t[{text:'⇪',name:'capsLock',action:function(e){e.keyboard('capToggle',true); return false;}},'a','s','d','f','g','h','j','k','l',{text:',', alt:[':',';']}],\r\n\t\t[{text:'⇧',name:'leftShift',action:function(e){e.keyboard('capToggle'); return false;}},'z','x','c','v','b','n','m',{text:'.', alt:['?','!',';']},'\\'',{text:':)', alt:[';)','X)','8)',':(']},{text:'⇧',name:'rightShift',action:function(e){e.keyboard('capToggle'); return false;}}],\r\n\t\t[{text:' ',name:'space'},{text:'←',action:false,name:'leftArrow'},{text:'→',action:false,name:'rightArrow'}]\r\n\t];\r\n})(jQuery);\r\n\r\n(function($) {\r\n    $.keyboard.plugins.form\t= function(e) {\r\n\t\tfunction trace(e) {\r\n\t\t\to = {};\r\n\t\t\tfor (i in e) {\r\n\t\t\t\to[i]\t=\te[i];\r\n\t\t\t}\r\n\t\t\tconsole.log(o);\r\n\t\t}\r\n\t\tvar input\t\t= null,\r\n\t\t\tblured\t\t= null,\r\n\t\t\tdelay\t\t= 500,\r\n\t\t\tshown\t\t= false,\r\n\t\t\tkeyboard\t= e.keyboard('keyboard'),\r\n\t\t\tsetFocus\t= function(e) {\r\n\t\t\t\tinput\t= e;\r\n\t\t\t\tblured\t= false;\r\n\t\t\t\tif(!shown) {\r\n\t\t\t\t\tkeyboard.stop(true, true).slideDown();\r\n\t\t\t\t\tshown\t= true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tunsetFocus\t= function(e) {\r\n\t\t\t\t// IE trigger setFocus before blur\r\n\t\t\t\tif(e.get(0) === input.get(0)) {\r\n\t\t\t\t\tblured\t= true;\r\n\t\t\t\t\t// Let time to a potencial blur event\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tif(blured) {\r\n\t\t\t\t\t\t\tinput\t= null;\r\n\t\t\t\t\t\t\tif(shown) {\r\n\t\t\t\t\t\t\t\tkeyboard.stop(true, true).slideUp();\r\n\t\t\t\t\t\t\t\tshown\t= false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, delay);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\r\n\t\t// Use\r\n\t\te.keyboard('bind', 'print', function(e, o) {\r\n\t\t\tif(input) {\r\n\t\t\t\tinput.selection().replace(o.text);\r\n\t\t\t}\r\n\t\t});\r\n\t\te.keyboard('bind', 'release', function(e, o) {\r\n\t\t\tif(input !== null) {\r\n\t\t\t\t//\tTabulation\r\n\t\t\t\tif(o.key.name === 'tab') {\r\n\t\t\t\t\tif(o.cap) {\r\n\t\t\t\t\t\tnewInput\t=\t$(\":input:eq(\" + ($(\":input\").index(input) - 1) + \")\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInput\t=\t$(\":input:eq(\" + ($(\":input\").index(input) + 1) + \")\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(newInput.length) {\r\n\t\t\t\t\t\tinput\t\t= newInput;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn\tinput.trigger('blur');\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tSubmition\r\n\t\t\t\t} else if(o.key.name === 'enter') {\r\n\t\t\t\t\tvar form\t= input.parents('form');\r\n\t\t\t\t\tif(form.length() > 0) {\r\n\t\t\t\t\t\tform.submit();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tDelete backward\r\n\t\t\t\t} else if(o.key.name === 'backSpace') {\r\n\t\t\t\t\tif(input.selection().length()) {\r\n\t\t\t\t\t\tinput.selection().clear();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinput.selection().set(input.selection().start() - 1, 1).clear();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tMove carret\r\n\t\t\t\t} else if(o.key.name === 'leftArrow') {\r\n\t\t\t\t\tinput.selection().set(input.selection().start() - 1, 0);\r\n\t\t\t\t} else if(o.key.name === 'rightArrow') {\r\n\t\t\t\t\tinput.selection().set(input.selection().start() + 1, 0);\r\n\t\t\t\t}\r\n\t\t\t\tinput.trigger('focus');\r\n\t\t\t}\r\n\t\t});\r\n\t\t/*\r\n\t\t// Show\r\n\t\t$('input[type!=\"submit\"],textarea').live('focus', function(e) {\r\n\t\t\tsetFocus($(e.target));\r\n\t\t});\r\n\t\t\r\n\t\t// Hide\r\n\t\t$('[type=\"text\"],textarea').bind('blur.keyboard', function(e) {\r\n\t\t\tunsetFocus($(e.target));\r\n\t\t});\r\n\t\t\r\n\t\t// Keyboard init\r\n\t\tif(!keyboard.attr('tabindex')) {\r\n\t\t\tif(input) {\r\n\t\t\t\tkeyboard.attr('tabindex', '0');\r\n\t\t\t}\r\n\t\t}\r\n\t\tkeyboard.bind('focus', function() {\r\n\t\t\t\t\tinput.trigger('focus');\r\n\t\t\t\t})\r\n\t\t\t\t.bind('mousedown.keyboard', function() {\r\n\t\t\t\t\tblured\t=\tfalse;\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t})\r\n\t\t\t\t.hide();*/\r\n    };\r\n})(jQuery);\r\n\r\n// jQuery Plugin Boilerplate\r\n// A boilerplate for jumpstarting jQuery plugins development\r\n// version 1.0, Jun 24th, 2011\r\n// by François Germain\r\n\r\n(function($) {\r\n    function trace(node) {\r\n\t\tvar e\t= {};\r\n\t\tfor(i in node) {\r\n\t\t\te[i]\t=\tnode[i];\r\n\t\t}\r\n\t\tconsole.log(e);\r\n\t}\r\n\t// Start\r\n\tfunction getSelectionStart(node) {\r\n\t\tif('selectionStart' in node) {\r\n\t\t\treturn\tnode.selectionStart;\r\n\t\t} else if('getSelection' in document) {\r\n\t\t\tif(!node.ownerDocument.getSelection().rangeCount) {\r\n\t\t\t\treturn\tnode.innerText.length;\r\n\t\t\t} else {\r\n\t\t\t\treturn\tnode.ownerDocument.getSelection().getRangeAt(0).startOffset;\r\n\t\t\t}\r\n\t\t} else if('selection' in document) {\r\n\t\t\tconsole.log('IE');\r\n\t\t}\r\n\t}\r\n\tfunction setSelectionStart(node, start) {\r\n\t\tif('selectionStart' in node) {\r\n\t\t\treturn\tnode.selectionStart\t= start;\r\n\t\t} else if('getSelection' in document) {\r\n\t\t\tvar\tselection\t= node.ownerDocument.getSelection(),\r\n\t\t\t\trange\t\t= document.createRange(),\r\n\t\t\t\tend\t\t\t= getSelectionEnd(node);\r\n\t\t\tselection.removeAllRanges();\r\n\t        range.setStart(node.firstChild, start);\r\n\t        range.setEnd(node.firstChild, end);\r\n\t        selection.addRange(range);\r\n\t\t} else if('selection' in document) {\r\n\t\t\tconsole.log('IE');\r\n\t\t}\r\n\t}\r\n\t\r\n\t// End\r\n\tfunction getSelectionEnd(node) {\r\n\t\tif('selectionStart' in node) {\r\n\t\t\treturn\tnode.selectionEnd;\r\n\t\t} else if('getSelection' in document) {\r\n\t\t\tif(!node.ownerDocument.getSelection().rangeCount) {\r\n\t\t\t\treturn\tnode.innerText.length;\r\n\t\t\t} else {\r\n\t\t\t\treturn\tnode.ownerDocument.getSelection().getRangeAt(0).endOffset;\r\n\t\t\t}\r\n\t\t} else if('selection' in document) {\r\n\t\t\tconsole.log('IE');\r\n\t\t}\r\n\t}\r\n\tfunction setSelectionEnd(node, end) {\r\n\t\tif('selectionStart' in node) {\r\n\t\t\treturn\tnode.selectionEnd\t= end;\r\n\t\t} else if('getSelection' in document) {\r\n\t\t\tvar\tselection\t= node.ownerDocument.getSelection(),\r\n\t\t\t\trange\t\t= document.createRange(),\r\n\t\t\t\tstart\t\t= getSelectionStart(node);\r\n\t\t\tselection.removeAllRanges();\r\n\t        range.setStart(node.firstChild, start);\r\n\t        range.setEnd(node.firstChild, end);\r\n\t        selection.addRange(range);\r\n\t\t} else if('selection' in document) {\r\n\t\t\tconsole.log('IE');\r\n\t\t}\r\n\t}\r\n\t\r\n\t// length\r\n\tfunction getSelectionLength(node) {\r\n\t\treturn\tgetSelectionEnd(node) - getSelectionStart(node);\r\n\t}\r\n\tfunction setSelectionLength(node, length) {\r\n\t\tsetSelectionEnd(node, getSelectionStart(node) + length);\r\n\t}\r\n\t\r\n\tfunction set(node, start, n, end) {\r\n\t\tsetSelectionStart(node, start);\r\n\t\tif(end) {\r\n\t\t\tsetSelectionEnd(node, n);\r\n\t\t} else {\r\n\t\t\tsetSelectionLength(node, n);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction replace(node, replace) {\r\n\t\tvar\tel\t= $(node),\r\n\t\t\tstr;\r\n\t\tif(el.is('input,textarea')) {\r\n\t\t\tstr\t= el.val();\r\n\t\t\tel.val(\tstr.substring(0, getSelectionStart(node))\r\n\t\t\t\t+\treplace\r\n\t\t\t\t+\tstr.substring(getSelectionEnd(node)));\r\n\t\t} else {\r\n\t\t\tstr\t= el.text();\r\n\t\t\tconsole.log(getSelectionStart(node));\r\n\t\t\tel.text(str.substring(0, getSelectionStart(node))\r\n\t\t\t\t+\treplace\r\n\t\t\t\t+\tstr.substring(getSelectionEnd(node)));\r\n\t\t}\r\n\t}\r\n\t\r\n\t$.fn.selection = function(length) {\r\n\t\tvar node\t= this.jquery ? this.get(0) : this;\r\n\t\treturn\t{\r\n\t\t\tstart: function(start) {\r\n\t\t\t\tif(typeof start !== 'undefined') {\r\n\t\t\t\t\tsetSelectionStart(node, start);\r\n\t\t\t\t\treturn\tthis;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\tgetSelectionStart(node);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tend: function(end) {\r\n\t\t\t\tif(typeof end !== 'undefined') {\r\n\t\t\t\t\tsetSelectionEnd(node, end);\r\n\t\t\t\t\treturn\tthis;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\tgetSelectionEnd(node);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlength: function(length) {\r\n\t\t\t\tif(typeof length !== 'undefined') {\r\n\t\t\t\t\tsetSelectionLength(node, length);\r\n\t\t\t\t\treturn\tthis;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\tgetSelectionLength(node);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tset: function(start, n, end) {\r\n\t\t\t\tset(node, start, n, end);\r\n\t\t\t\treturn\tthis;\r\n\t\t\t},\r\n\t\t\tclear: function() {\r\n\t\t\t\tthis.replace('');\r\n\t\t\t},\r\n\t\t\treplace: function(string) {\r\n\t\t\t\tvar start\t= getSelectionStart(node);\r\n\t\t\t\treplace(node, string);\r\n\t\t\t\tset(node, start + string.length, 0);\r\n\t\t\t\treturn\tthis;\r\n\t\t\t},\r\n\t\t\tbefore: function(string) {\r\n\t\t\t\tvar start\t= getSelectionStart(node);\r\n\t\t\t\tsetSelectionLength(node, 0);\r\n\t\t\t\treplace(node, string);\r\n\t\t\t\tset(node, start + string.length, 0);\r\n\t\t\t},\r\n\t\t\tafter: function(string) {\r\n\t\t\t\tvar start\t= getSelectionEnd(node);\r\n\t\t\t\tset(node, start, 0);\r\n\t\t\t\treplace(node, string);\r\n\t\t\t\tset(node, start + string.length, 0);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n"],[1,"(function ($) {\r\n    function trace(node) {\r\n        var e = {};\r\n        for (i in node) {\r\n            e[i] = node[i];\r\n        }\r\n        console.log(e);\r\n    }\r\n    // Start\r\n    function getSelectionStart(node) {\r\n        if ('selectionStart' in node) {\r\n            return node.selectionStart;\r\n        } else if ('getSelection' in document) {\r\n            if (!node.ownerDocument.getSelection().rangeCount) {\r\n                return node.innerText.length;\r\n            } else {\r\n                return node.ownerDocument.getSelection().getRangeAt(0).startOffset;\r\n            }\r\n        } else if ('selection' in document) {\r\n            console.log('IE');\r\n        }\r\n    }\r\n    function setSelectionStart(node, start) {\r\n        if ('selectionStart' in node) {\r\n            return node.selectionStart = start;\r\n        } else if ('getSelection' in document) {\r\n            var selection = node.ownerDocument.getSelection(),\r\n    \t\t\trange = document.createRange(),\r\n\t\t\t\tend = getSelectionEnd(node);\r\n            selection.removeAllRanges();\r\n            range.setStart(node.firstChild, start);\r\n            range.setEnd(node.firstChild, end);\r\n            selection.addRange(range);\r\n        } else if ('selection' in document) {\r\n            console.log('IE');\r\n        }\r\n    }\r\n\r\n    // End\r\n    function getSelectionEnd(node) {\r\n        if ('selectionStart' in node) {\r\n            return node.selectionEnd;\r\n        } else if ('getSelection' in document) {\r\n            if (!node.ownerDocument.getSelection().rangeCount) {\r\n                return node.innerText.length;\r\n            } else {\r\n                return node.ownerDocument.getSelection().getRangeAt(0).endOffset;\r\n            }\r\n        } else if ('selection' in document) {\r\n            console.log('IE');\r\n        }\r\n    }\r\n    function setSelectionEnd(node, end) {\r\n        if ('selectionStart' in node) {\r\n            return node.selectionEnd = end;\r\n        } else if ('getSelection' in document) {\r\n            var selection = node.ownerDocument.getSelection(),\r\n\t\t\t\trange = document.createRange(),\r\n\t\t\t\tstart = getSelectionStart(node);\r\n            selection.removeAllRanges();\r\n            range.setStart(node.firstChild, start);\r\n            range.setEnd(node.firstChild, end);\r\n            selection.addRange(range);\r\n        } else if ('selection' in document) {\r\n            console.log('IE');\r\n        }\r\n    }\r\n\r\n    // length\r\n    function getSelectionLength(node) {\r\n        return getSelectionEnd(node) - getSelectionStart(node);\r\n    }\r\n    function setSelectionLength(node, length) {\r\n        setSelectionEnd(node, getSelectionStart(node) + length);\r\n    }\r\n\r\n    function set(node, start, n, end) {\r\n        setSelectionStart(node, start);\r\n        if (end) {\r\n            setSelectionEnd(node, n);\r\n        } else {\r\n            setSelectionLength(node, n);\r\n        }\r\n    }\r\n\r\n    function replace(node, replace) {\r\n        var el = $(node),\r\n\t\t\tstr;\r\n        if (el.is('input,textarea')) {\r\n            str = el.val();\r\n            el.val(str.substring(0, getSelectionStart(node))\r\n\t\t\t\t+ replace\r\n\t\t\t\t+ str.substring(getSelectionEnd(node)));\r\n        } else {\r\n            str = el.text();\r\n            console.log(getSelectionStart(node));\r\n            el.text(str.substring(0, getSelectionStart(node))\r\n\t\t\t\t+ replace\r\n\t\t\t\t+ str.substring(getSelectionEnd(node)));\r\n        }\r\n    }\r\n\r\n    $.fn.selection = function (length) {\r\n        var node = this.jquery ? this.get(0) : this;\r\n        return {\r\n            start: function (start) {\r\n                if (typeof start !== 'undefined') {\r\n                    setSelectionStart(node, start);\r\n                    return this;\r\n                } else {\r\n                    return getSelectionStart(node);\r\n                }\r\n            },\r\n            end: function (end) {\r\n                if (typeof end !== 'undefined') {\r\n                    setSelectionEnd(node, end);\r\n                    return this;\r\n                } else {\r\n                    return getSelectionEnd(node);\r\n                }\r\n            },\r\n            length: function (length) {\r\n                if (typeof length !== 'undefined') {\r\n                    setSelectionLength(node, length);\r\n                    return this;\r\n                } else {\r\n                    return getSelectionLength(node);\r\n                }\r\n            },\r\n            set: function (start, n, end) {\r\n                set(node, start, n, end);\r\n                return this;\r\n            },\r\n            clear: function () {\r\n                this.replace('');\r\n            },\r\n            replace: function (string) {\r\n                var start = getSelectionStart(node);\r\n                replace(node, string);\r\n                set(node, start + string.length, 0);\r\n                return this;\r\n            },\r\n            before: function (string) {\r\n                var start = getSelectionStart(node);\r\n                setSelectionLength(node, 0);\r\n                replace(node, string);\r\n                set(node, start + string.length, 0);\r\n            },\r\n            after: function (string) {\r\n                var start = getSelectionEnd(node);\r\n                set(node, start, 0);\r\n                replace(node, string);\r\n                set(node, start + string.length, 0);\r\n            }\r\n        };\r\n    }\r\n})(jQuery);\r\n\r\n(function ($) {\r\n    //\tStatic private vars\r\n    var pluginName = 'keyboard',\r\n\t\temptyKey = {\r\n\t\t    //\tStatic public vars\r\n\t\t    text: '',\r\n\t\t    alt: [],\r\n\t\t    name: ''\r\n\t\t};\r\n    $[pluginName] = function (dom, options) {\r\n        var\r\n\t\tplugin = this,\r\n\t\tevent = $(document.createElement('div')),\r\n\t\tdom = dom,\r\n\t\telement = $(dom),\r\n\t\tdefaults = {\r\n\t\t    elements: {\r\n\t\t        keyboard: '<div class=\"keyboard\"></div>',\r\n\t\t        row: '<ul class=\"keyboard-row\"></ul>',\r\n\t\t        key: '<li class=\"keyboard-key\"></li>',\r\n\t\t        alt: '<ul class=\"keyboard-alt\"></ul>',\r\n\t\t        altKey: '<li class=\"keyboard-alt-key\"></li>'\r\n\t\t    },\r\n\t\t    altDelay: 500,\r\n\t\t    classPrefix: 'keyboard',\r\n\t\t    keyboard: [],\r\n\t\t    plugin: function (e) {\r\n\t\t        e[pluginName]('bind', 'print', function (e, o) {\r\n\t\t            console.log(o.text);\r\n\t\t        });\r\n\t\t    }\r\n\t\t},\r\n\t\tsettings = {},\r\n\t\t//TODO: clean all this vars\r\n\t\tkeyboard,\r\n\t\ttimer = NaN,\r\n\t\trows = [],\r\n\t\tcap = false,\r\n\t\tlocked = false,\r\n\t\tkeyPressed,\r\n        clickHandler = options.clickHandler ? options.clickHandler : function (e, o) {\r\n            console.log(o.text);\r\n        },\r\n\r\n\t\t// Private methods\r\n\t\tinit = function (rows) {\r\n\t\t    // Settings\r\n\t\t    settings = $.extend({}, defaults, options);\r\n\t\t    if (typeof settings.plugin !== 'object') {\r\n\t\t        settings.plugin = [settings.plugin];\r\n\t\t    }\r\n\r\n\t\t    // Keyboard\r\n\t\t    keyboard = $(settings.elements.keyboard).appendTo(element);\r\n\t\t    plugin.methods.keyboard(settings.keyboard);\r\n\r\n\t\t    // Events\r\n\t\t    $(document).bind('mouseup.' + pluginName, function () {\r\n\t\t        releaseKey();\r\n\t\t    });\r\n\r\n\t\t    // Plugins\r\n\t\t    for (i in settings.plugin) {\r\n\t\t        plugin.methods.plug(settings.plugin[i]);\r\n\t\t    }\r\n\t\t},\r\n\t\treleaseKey = function (key, alt) {\r\n\t\t    if (keyPressed) {\r\n\t\t        keyPressed.removeClass(settings.classPrefix + '-held');\r\n\t\t        keyPressed = null;\r\n\t\t        clearTimeout(timer);\r\n\t\t        timer = NaN;\r\n\t\t        if (typeof key !== 'undefined') {\r\n\t\t            if (typeof alt === 'undefined') {\r\n\t\t                alt = false;\r\n\t\t            }\r\n\t\t            var text = alt !== false\r\n\t\t\t\t\t\t\t\t? (cap ? key.cap.alt[alt] : key.alt[alt])\r\n\t\t\t\t\t\t\t\t: (cap ? key.cap.text : key.text);\r\n\t\t            if (key.action !== false && (!key.action || key.action(element) !== false)) {\r\n\t\t                trigger('print', { key: key, cap: cap, alt: alt, text: text });\r\n\t\t                if (!locked && cap) {\r\n\t\t                    plugin.methods.capToggle();\r\n\t\t                }\r\n\t\t            }\r\n\t\t            trigger('release', { key: key, cap: cap, alt: alt, text: text });\r\n\t\t            clickHandler(plugin, { key: key, cap: cap, alt: alt, text: text });\r\n\t\t        }\r\n\t\t    }\r\n\t\t},\r\n\t\tisValidRow = function (row) {\r\n\t\t    return typeof row === 'number' && row === Math.round(row);\r\n\t\t},\r\n\t\tnewKeyboard = function (newKeyboard) {\r\n\t\t    keyboard.html('');\r\n\t\t    rows = [];\r\n\t\t    for (i in newKeyboard) {\r\n\t\t        plugin.methods.addRow(newKeyboard[i]);\r\n\t\t    }\r\n\t\t},\r\n\t\tnewRow = function (row) {\r\n\t\t    var i = rows.length;\r\n\t\t    while (i <= row) {\r\n\t\t        rows.push([]);\r\n\t\t        keyboard.append(settings.elements.row);\r\n\t\t        i++;\r\n\t\t    }\r\n\t\t},\r\n\t\tnewKey = function (row, key) {\r\n\t\t    if (typeof key !== 'object') {\r\n\t\t        key = { text: key };\r\n\t\t    }\r\n\t\t    key = $.extend({}, emptyKey, key);\r\n\t\t    if (typeof key.cap !== 'object') {\r\n\t\t        if (typeof key.cap !== 'undefined') {\r\n\t\t            key.cap = { text: key.cap };\r\n\t\t        } else {\r\n\t\t            key.cap = {};\r\n\t\t        }\r\n\t\t    }\r\n\t\t    if (typeof key.cap.alt === 'undefined') {\r\n\t\t        key.cap.alt = [];\r\n\t\t        for (var i in key.alt) {\r\n\t\t            key.cap.alt[i] = key.alt[i].toUpperCase();\r\n\t\t        }\r\n\t\t    }\r\n\t\t    if (typeof key.cap.text === 'undefined') {\r\n\t\t        key.cap.text = key.text.toUpperCase()\r\n\t\t    }\r\n\t\t    rows[row].push(key);\r\n\t\t    var keyEl = $(settings.elements.key).appendTo(keyboard.children(':eq(' + row + ')'));\r\n\t\t    keyEl.data(pluginName + '-key', key);\r\n\t\t    keyEl.text(cap ? key.cap.text : key.text);\r\n\t\t    if (key.name) {\r\n\t\t        keyEl.addClass(settings.classPrefix + '-key-' + key.name);\r\n\t\t    }\r\n\t\t    updateAlts(keyEl);\r\n\t\t    keyEl.bind('mouseup.' + pluginName, function () {\r\n\t\t        if (keyPressed) {\r\n\t\t            releaseKey(key);\r\n\t\t        }\r\n\t\t    });\r\n\t\t    keyEl.bind('mousedown.' + pluginName, function () {\r\n\t\t        keyPressed = keyEl;\r\n\t\t        timer = setTimeout(function () {\r\n\t\t            keyEl.addClass(settings.classPrefix + '-held');\r\n\t\t        }, settings.altDelay);\r\n\t\t    });\r\n\t\t},\r\n\t\tupdateAlts = function (keyEl) {\r\n\t\t    var key = keyEl.data(pluginName + '-key');\r\n\t\t    if (key.alt) {\r\n\t\t        var altEl = $(settings.elements.alt).appendTo(keyEl);\r\n\t\t        for (var k in key.alt) {\r\n\t\t            var altKeyEl = $(settings.elements.altKey).appendTo(altEl);\r\n\t\t            altKeyEl.data(pluginName + '-key', key);\r\n\t\t            altKeyEl.data(pluginName + '-alt', k);\r\n\t\t            altKeyEl.text(cap ? key.cap.alt[k] : key.alt[k]);\r\n\t\t            altKeyEl.bind('mouseup.' + pluginName, function () {\r\n\t\t                releaseKey($(this).data(pluginName + '-key'), $(this).data(pluginName + '-alt'));\r\n\t\t            });\r\n\t\t        }\r\n\t\t    }\r\n\t\t},\r\n\t\tupdateKeys = function () {\r\n\t\t    for (var i in rows) {\r\n\t\t        var rowEl = keyboard.children(':eq(' + i + ')');\r\n\t\t        for (j in rows[i]) {\r\n\t\t            var key = rows[i][j];\r\n\t\t            var keyEl = rowEl.children(':eq(' + j + ')');\r\n\t\t            if (cap) {\r\n\t\t                keyEl.text(key.cap.text);\r\n\t\t            } else {\r\n\t\t                keyEl.text(key.text);\r\n\t\t            }\r\n\t\t            updateAlts(keyEl);\r\n\t\t        }\r\n\t\t    }\r\n\t\t},\r\n\t\ttrigger = function () {\r\n\t\t    arguments[0] = pluginName + '-' + arguments[0];\r\n\t\t    element.trigger.apply(element, arguments);\r\n\t\t    return dom;\r\n\t\t};\r\n\r\n        // Public methods\r\n        plugin.methods = {\r\n            bind: function () {\r\n                arguments[0] = pluginName + '-' + arguments[0];\r\n                element.bind.apply(element, arguments);\r\n                return dom;\r\n            },\r\n            addRow: function (keys) {\r\n                row = rows.length;\r\n                newRow(row);\r\n                for (var i in keys) {\r\n                    newKey(row, keys[i]);\r\n                }\r\n                return dom;\r\n            },\r\n            addKeys: function (row, keys) {\r\n                if (isValidRow(row)) {\r\n                    if (!rows[row]) {\r\n                        newRow(row);\r\n                    }\r\n                    for (var i in keys) {\r\n                        newKey(row, keys[i]);\r\n                    }\r\n                }\r\n                return dom;\r\n            },\r\n            addKey: function (row, key) {\r\n                if (isValidRow(row)) {\r\n                    if (!rows[row]) {\r\n                        newRow(row);\r\n                    }\r\n                    newKey(row, key);\r\n                }\r\n                return dom;\r\n            },\r\n            plug: function (newPlugin) {\r\n                if (typeof newPlugin === 'string') {\r\n                    newPlugin = $[pluginName].plugins[newPlugin];\r\n                }\r\n                if (typeof newPlugin === 'function') {\r\n                    newPlugin(element);\r\n                }\r\n            },\r\n            capToggle: function (lock) {\r\n                cap = !cap;\r\n                locked = Boolean(lock) && cap;\r\n                if (cap && locked) {\r\n                    element.addClass('keyboard-capsLocked');\r\n                    element.removeClass('keyboard-caps');\r\n                } else if (cap) {\r\n                    element.addClass('keyboard-caps');\r\n                    element.removeClass('keyboard-capsLocked');\r\n                } else {\r\n                    element.removeClass('keyboard-caps');\r\n                    element.removeClass('keyboard-capsLocked');\r\n                }\r\n                updateKeys();\r\n                return dom;\r\n            },\r\n            cap: function (lock) {\r\n                cap = true;\r\n                locked = Boolean(lock);\r\n                if (cap && locked) {\r\n                    element.addClass('keyboard-capsLocked');\r\n                    element.removeClass('keyboard-caps');\r\n                } else {\r\n                    element.addClass('keyboard-caps');\r\n                    element.removeClass('keyboard-capsLocked');\r\n                }\r\n                updateKeys();\r\n                return dom;\r\n            },\r\n            unCap: function () {\r\n                cap = false;\r\n                locked = false;\r\n                element.removeClass('keyboard-caps');\r\n                element.removeClass('keyboard-capsLocked');\r\n                updateKeys();\r\n                return dom;\r\n            },\r\n            keyboard: function (def) {\r\n                if (typeof def === 'string') {\r\n                    def = $[pluginName].keyboards[def];\r\n                }\r\n                if (typeof def === 'object') {\r\n                    newKeyboard(def);\r\n                }\r\n                return keyboard;\r\n            }\r\n        };\r\n\r\n        element.data(pluginName, plugin);\r\n        init();\r\n\r\n    }\r\n    $[pluginName].keyboards = {};\r\n    $[pluginName].plugins = {};\r\n\r\n    $.fn[pluginName] = function (options) {\r\n        var args = arguments,\r\n\t\t\tchain = this;\r\n        this.each(function () {\r\n            var i = $(this);\r\n            if (undefined == (plugin = i.data(pluginName))) {\r\n                var plugin = new $[pluginName](this, options);\r\n            }\r\n            if (plugin.methods[options]) {\r\n                if ((r = plugin.methods[options].apply(plugin, Array.prototype.slice.call(args, 1))) !== this) {\r\n                    chain = r;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n        return chain;\r\n    }\r\n\r\n})(jQuery);\r\n\r\n(function ($) {\r\n    $.keyboard.keyboards.qwerty = [\r\n\t\t['@', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', { text: '⌫', name: 'backSpace', action: function (e) { return false; } }],\r\n\t\t[{ text: '⇥', cap: { text: '⇤' }, name: 'tab', action: false }, 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', { text: '⏎', name: 'return', action: false }],\r\n\t\t[{ text: '⇪', name: 'capsLock', action: function (e) { e.keyboard('capToggle', true); return false; } }, 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', { text: ',', alt: [':', ';'] }],\r\n\t\t[{ text: '⇧', name: 'leftShift', action: function (e) { e.keyboard('capToggle'); return false; } }, 'z', 'x', 'c', 'v', 'b', 'n', 'm', { text: '.', alt: ['?', '!', ';'] }, '\\'', { text: ':)', alt: [';)', 'X)', '8)', ':('] }, { text: '⇧', name: 'rightShift', action: function (e) { e.keyboard('capToggle'); return false; } }],\r\n\t\t[{ text: ' ', name: 'space' }, { text: '←', action: false, name: 'leftArrow' }, { text: '→', action: false, name: 'rightArrow' }]\r\n    ];"],[0,"\r\n})"]],"start1":148,"start2":148,"length1":15645,"length2":16320}]],"length":16477,"saved":false}
{"ts":1358793243675,"patch":[[{"diffs":[[0,"nit();\r\n"],[1,"        keyboard.hide();"],[0,"\r\n    }\r"]],"start1":14753,"start2":14753,"length1":16,"length2":40}]],"length":16501,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358793987755,"patch":[[{"diffs":[[0,"t: '"],[-1,"⇥'"],[1,"TAB"],[0,", ca"]],"start1":15678,"start2":15678,"length1":10,"length2":11},{"diffs":[[0,"t: '"],[-1,"⏎"],[1,"Enter"],[0,"', n"]],"start1":15792,"start2":15792,"length1":9,"length2":13},{"diffs":[[0,"t: '"],[-1,"⇪"],[1,"CAPS"],[0,"', n"]],"start1":15847,"start2":15847,"length1":9,"length2":12},{"diffs":[[0,"],\r\n\t\t[{ text: '"],[-1,"⇧"],[1,"SHIFT"],[0,"', name: 'leftSh"]],"start1":16024,"start2":16024,"length1":33,"length2":37}]],"length":16513,"saved":false}
{"ts":1358794010944,"patch":[[{"diffs":[[0,"xt: 'TAB"],[1,"'"],[0,", cap: {"]],"start1":15677,"start2":15677,"length1":16,"length2":17},{"diffs":[[0,"t: '"],[-1,"⇤"],[1,"TAB"],[0,"' },"]],"start1":15698,"start2":15698,"length1":9,"length2":11}]],"length":16516,"saved":false}
{"ts":1358794047080,"patch":[[{"diffs":[[0,": 'E"],[-1,"nter"],[1,"NTER"],[0,"', n"]],"start1":15796,"start2":15796,"length1":12,"length2":12},{"diffs":[[0,"t: '"],[-1,"⇧"],[1,"SHIFT"],[0,"', n"]],"start1":16267,"start2":16267,"length1":9,"length2":13}]],"length":16520,"saved":false}
{"ts":1358794130935,"patch":[[{"diffs":[[0,"],\r\n\t\t[{ text: '"],[1,"L"],[0,"S"],[-1,"HIFT"],[0,"', name: 'leftSh"]],"start1":16027,"start2":16027,"length1":37,"length2":34},{"diffs":[[0,"t: '"],[1,"R"],[0,"S"],[-1,"HIFT"],[0,"', n"]],"start1":16264,"start2":16264,"length1":13,"length2":10}]],"length":16514,"saved":false}
{"ts":1358794141931,"patch":[[{"diffs":[[0,": 'E"],[-1,"NTER"],[0,"', n"]],"start1":15796,"start2":15796,"length1":12,"length2":8}]],"length":16510,"saved":false}
{"ts":1358794220985,"patch":[[{"diffs":[[0,"),\r\n    "],[-1,"\t\t\t"],[1,"            "],[0,"range = "]],"start1":1082,"start2":1082,"length1":19,"length2":28}]],"length":16519,"saved":false}
